---
kind: Template
apiVersion: v1
metadata:
  annotations:
    description: Deployment template for a postgresql server with persistent storage.
    tags: ${NAME}
  name: ${NAME}-persistent-template
objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}-${TAG}
      labels:
        name: ${NAME}
        environment: ${TAG}
        role: ${ROLE}
      generation: 1
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}-${TAG}
            from:
              kind: ImageStreamTag
              namespace: ${IMAGE_NAMESPACE}
              name: ${SOURCE_IMAGE}
        - type: ConfigChange
      replicas: 1
      test: false
      selector:
        name: ${NAME}
        environment: ${TAG}
      template:
        metadata:
          name: ${NAME}-${TAG}
          labels:
            name: ${NAME}
            environment: ${TAG}
            role: ${ROLE}
        spec:
          volumes:
            - name: ${NAME}-data
              persistentVolumeClaim:
                claimName: ${NAME}-${TAG}
          containers:
            - name: ${NAME}-${TAG}
              image:
              ports:
                - containerPort: 5432
                  protocol: TCP
              env:
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${TAG}-secret
                      key: database-name
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${TAG}-secret
                      key: database-user
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${TAG}-secret
                      key: database-password
                - name: POSTGRESQL_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NAME}-${TAG}-secret
                      key: admin-password
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: ${NAME}-data
                  mountPath: /var/lib/pgsql/data
              livenessProbe:
                tcpSocket:
                  port: 5432
                initialDelaySeconds: 30
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              readinessProbe:
                exec:
                  command:
                    - /bin/sh
                    - -i
                    - -c
                    - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                      'SELECT 1'
                initialDelaySeconds: 5
                timeoutSeconds: 1
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities: {}
                privileged: false
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}-${TAG}
      labels:
        name: ${NAME}
        environment: ${TAG}
        role: ${ROLE}
    spec:
      storageClassName: ${PERSISTENT_VOLUME_CLASS}
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${PERSISTENT_VOLUME_SIZE}

  - kind: Secret
    apiVersion: v1
    metadata:
      name: ${NAME}-${TAG}-secret
      labels:
        name: ${NAME}
        environment: ${TAG}
        role: ${ROLE}
    stringData:
      database-name: ${POSTGRESQL_DATABASE_NAME}
      database-user: ${POSTGRESQL_USER}
      database-password: ${POSTGRESQL_PASSWORD}
      admin-password: ${POSTGRESQL_ADMIN_PASSWORD}
    type: Opaque

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}-${TAG}
      labels:
        name: ${NAME}
        environment: ${TAG}
        role: ${ROLE}
      annotations:
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name==postgresql)].port}
    spec:
      ports:
        - name: ${NAME}-${TAG}
          protocol: TCP
          port: 5432
          targetPort: 5432
      selector:
        name: ${NAME}
        environment: ${TAG}
      type: ClusterIP
      sessionAffinity: None

parameters:
  - name: NAME
    displayName: Name
    description:
      The name assigned to all of the OpenShift resources associated to the
      PostgreSQL instance.
    required: true
    value: postgresql

  - name: TAG
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod
    required: true
    value: dev

  - name: ROLE
    displayName: Role
    description: Role
    required: true
    value: db

  - name: IMAGE_NAMESPACE
    displayName: Image Namespace
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: openshift

  - name: SOURCE_IMAGE
    displayName: Source Image name
    required: true
    description: The namespace of the OpenShift project containing the imagestream for the application.
    value: postgresql:12

  - name: POSTGRESQL_DATABASE_NAME
    displayName: PostgreSQL Database Name
    description: The name of the PostgreSQL database.
    required: true
    value: lear

  - name: POSTGRESQL_USER
    displayName: PostgreSQL Connection Username
    description: Username for PostgreSQL user that will be used for accessing the database.  Needs to be basee64 encoded/
    required: true
    value: user5SJ

  - name: POSTGRESQL_PASSWORD
    displayName: PostgreSQL Connection Password
    description: Password for the PostgreSQL connection user.  Needs to be basee64 encoded/
    required: true
    generate: expression
    from: '[a-zA-Z0-9]{16}'

  - name: POSTGRESQL_ADMIN_PASSWORD
    displayName: PostgreSQL Admin Password
    description: Password for the 'postgres' PostgreSQL administrative account.  Needs to be basee64 encoded.
    required: true
    generate: expression
    from: '[a-zA-Z0-9]{16}'

  - name: PERSISTENT_VOLUME_SIZE
    displayName: Persistent Volume Size
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    required: true
    value: 10Gi

  - name: PERSISTENT_VOLUME_CLASS
    displayName: Persistent Volume Class name
    description: The class of the volume; netapp-file-standard, netapp-file-extended, netapp-block-standard, netapp-block-extended.
    required: false
    value: netapp-file-standard

  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m

  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 250m

  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi

  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 512Mi
