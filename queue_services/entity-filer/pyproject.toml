[tool.poetry]
name = "entity-filer"
version = "3.0.1"
description = "Processes already validated filings to apply them to the Businness Model, and notify downstream services."
authors = ["thor <thor@wolpert.ca>"]
license = "BSD-3-Clause"
readme = "README.md"
packages = [{include = "entity_filer", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
Flask = "^2.3.2"
dpath = "^2.1.6"
jsonschema = "^4.18.3"
python-dateutil = "^2.8.2"
python-dotenv = "^1.0.0"
sentry-sdk = "^1.28.1"
pycountry = "^22.3.5"
pg8000 = "^1.29.8"
flask-babel = "^3.1.0"

registry-schemas = {git = "https://github.com/bcgov/business-schemas.git", rev = "2.18.10"}
simple_cloudevent = { git = "https://github.com/daxiom/simple-cloudevent.py" }

## sql-versioning = { git = "https://github.com/bcgov/lear.git", subdirectory = "python/common/sql-versioning", branch = "feature-legal-name" }
## sql-versioning = {path = "../../python/common/sql-versioning"}
business-model = { git = "https://github.com/bcgov/lear.git", subdirectory = "python/common/business-registry-model", branch = "feature-legal-name" }
## business-model = {path = "../../python/common/business-registry-model"}
cattrs = "^23.1.2"
google-cloud-pubsub = "^2.18.4"
google-auth = "^2.23.3"
gunicorn = "^21.2.0"


[tool.poetry.group.dev.dependencies]
flask-migrate = "^4.0.4"
freezegun = "^1.2.2"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.1"
pytest-mock = "^3.11.1"
requests = "^2.31.0"
requests-mock = "^1.11.0"
black = "^23.12.1"
pylint = "^3.0.3"
bandit = "^1.7.6"
flake8-pyproject = "^1.2.3"
isort = "^5.13.2"

[tool.bandit]
exclude_dirs = [".venv","tests"]
skips = ["B104"]

[tool.flake8]
ignore = ["F401","E402", "Q000", "E203", "W503", "W504" ]
exclude = [
    ".venv",
    ".git",
    "*migrations*"
]
per-file-ignores = [
    "__init__.py:F401",
    "*.py:B902"
]
max-line-length = 120
docstring-min-length=10
count = true

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.pylint.'MESSAGES CONTROL']
ignore = [ "migrations", "test"]
notes = ["FIXME","XXX","TODO"]
ignored-modules= ["flask_sqlalchemy", "sqlalchemy", "SQLAlchemy" , "alembic", "scoped_session"]
ignored-classes= "scoped_session"
disable = "C0209,C0301,W0511,W0613,W0703,W1514,R0801,R0902,R0903,R0911,R0401,R1705,R1718,W3101"
extension-pkg-whitelist = "pydantic"

## [[tool.poetry.source]]
## name = "local-pypi"
## url = "http://localhost:9191/"
## priority = "supplemental"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
