{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "annotations": {
      "description": "Deployment template for a entity-filer service.",
      "tags": "${NAME}-${TAG_NAME}"
    },
    "name": "${NAME}-${TAG_NAME}-deploy-template"
  },
  "objects": [
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-${TAG_NAME}",
        "labels": {
          "app": "${NAME}-${TAG_NAME}",
          "app-group": "${APP_GROUP}-${TAG_NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          }
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": ["${NAME}-${TAG_NAME}"],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${NAME}:${TAG_NAME}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": "${REPLICAS}",
        "test": false,
        "selector": {
          "app": "${NAME}-${TAG_NAME}",
          "deploymentconfig": "${NAME}-${TAG_NAME}"
        },
        "template": {
          "metadata": {
            "labels": {
              "app": "${NAME}-${TAG_NAME}",
              "deploymentconfig": "${NAME}-${TAG_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}-${TAG_NAME}",
                "image": "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${NAME}:${TAG_NAME}",
                "livenessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/healthz",
                    "port": 7070,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 60,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "readinessProbe": {
                  "failureThreshold": 3,
                  "httpGet": {
                    "path": "/readyz",
                    "port": 7070,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 60,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "timeoutSeconds": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  },
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  }
                },
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  },
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "DATABASE_USERNAME",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "postgresql-${TAG_NAME}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "DATABASE_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "postgresql-${TAG_NAME}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "DATABASE_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "DATABASE_NAME"
                      }
                    }
                  },
                  {
                    "name": "DATABASE_HOST",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "DATABASE_HOST"
                      }
                    }
                  },
                  {
                    "name": "DB_PORT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "DB_PORT"
                      }
                    }
                  },
                  {
                    "name": "JWT_OIDC_JWKS_CACHE_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "JWT_OIDC_JWKS_CACHE_TIMEOUT"
                      }
                    }
                  },
                  {
                    "name": "PAYMENT_SVC_URL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "PAYMENT_SVC_URL"
                      }
                    }
                  },
                  {
                    "name": "APP_FILE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "APP_FILE"
                      }
                    }
                  },
                  {
                    "name": "SENTRY_DSN",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "SENTRY_DSN"
                      }
                    }
                  },
                  {
                    "name": "NATS_SERVERS",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "NATS_SERVERS"
                      }
                    }
                  },
                  {
                    "name": "NATS_CLUSTER_ID",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "NATS_CLUSTER_ID"
                      }
                    }
                  },
                  {
                    "name": "NATS_CLIENT_NAME",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "NATS_CLIENT_NAME"
                      }
                    }
                  },
                  {
                    "name": "NATS_SUBJECT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "NATS_SUBJECT"
                      }
                    }
                  },
                  {
                    "name": "NATS_FILER_SUBJECT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "NATS_FILER_SUBJECT"
                      }
                    }
                  },
                  {
                    "name": "NATS_ENTITY_EVENT_SUBJECT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "NATS_ENTITY_EVENT_SUBJECT"
                      }
                    }
                  },
                  {
                    "name": "NATS_QUEUE",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "name": "${NAME}-${TAG_NAME}-config",
                        "key": "NATS_QUEUE"
                      }
                    }
                  },
                  {
                    "name": "ACCOUNT_SVC_AUTH_URL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "ACCOUNT_SVC_AUTH_URL",
                        "name": "${NAME}-${TAG_NAME}-config"
                      }
                    }
                  },
                  {
                    "name": "ACCOUNT_SVC_ENTITY_URL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "ACCOUNT_SVC_ENTITY_URL",
                        "name": "${NAME}-${TAG_NAME}-config"
                      }
                    }
                  },
                  {
                    "name": "ACCOUNT_SVC_AFFILIATE_URL",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "ACCOUNT_SVC_AFFILIATE_URL",
                        "name": "${NAME}-${TAG_NAME}-config"
                      }
                    }
                  },
                  {
                    "name": "ACCOUNT_SVC_CLIENT_ID",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "ACCOUNT_SVC_CLIENT_ID",
                        "name": "${NAME}-${TAG_NAME}-config"
                      }
                    }
                  },
                  {
                    "name": "ACCOUNT_SVC_CLIENT_SECRET",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "ACCOUNT_SVC_CLIENT_SECRET",
                        "name": "${NAME}-${TAG_NAME}-config"
                      }
                    }
                  },
                  {
                    "name": "ACCOUNT_SVC_TIMEOUT",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "ACCOUNT_SVC_TIMEOUT",
                        "name": "${NAME}-${TAG_NAME}-config"
                      }
                    }
                  },
                  {
                    "name": "NAMEX_API",
                    "valueFrom": {
                      "configMapKeyRef": {
                        "key": "NAMEX_API",
                        "name": "${NAME}-${TAG_NAME}-config"
                      }
                    }
                  }
                ]
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "securityContext": {},
            "schedulerName": "default-scheduler"
          }
        }
      }
    },
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-${TAG_NAME}-config",
        "labels": {
          "app": "${NAME}-${TAG_NAME}",
          "app-group": "${APP_GROUP}-${TAG_NAME}"
        }
      },
      "data": {
        "APP_FILE": "${APP_FILE}",
        "DATABASE_HOST": "postgresql-${TAG_NAME}",
        "DATABASE_NAME": "${DATABASE_NAME}",
        "DB_PORT": "5432",
        "JWT_OIDC_JWKS_CACHE_TIMEOUT": "300",
        "PAYMENT_SVC_URL": "${PAYMENT_SVC_URL}",
        "SENTRY_DSN": "${SENTRY_DSN}",
        "NATS_SERVERS": "${NATS_SERVERS}",
        "NATS_CLUSTER_ID": "${NATS_CLUSTER_ID}",
        "NATS_CLIENT_NAME": "${NATS_CLIENT_NAME}",
        "NATS_SUBJECT": "${NATS_SUBJECT}",
        "NATS_FILER_SUBJECT": "${NATS_FILER_SUBJECT}",
        "NATS_ENTITY_EVENT_SUBJECT": "${NATS_ENTITY_EVENT_SUBJECT}",
        "NATS_QUEUE": "${NATS_QUEUE}",
        "ACCOUNT_SVC_AUTH_URL": "{ACCOUNT_SVC_AUTH_URL}",
        "ACCOUNT_SVC_ENTITY_URL": "${ACCOUNT_SVC_ENTITY_URL}",
        "ACCOUNT_SVC_AFFILIATE_URL": "${ACCOUNT_SVC_AFFILIATE_URL}",
        "ACCOUNT_SVC_CLIENT_ID": "${ACCOUNT_SVC_CLIENT_ID}",
        "ACCOUNT_SVC_CLIENT_SECRET": "${ACCOUNT_SVC_CLIENT_SECRET}",
        "ACCOUNT_SVC_TIMEOUT": "${ACCOUNT_SVC_TIMEOUT}",
        "NAMEX_API": "${NAMEX_API}"
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the OpenShift resources associated to the server instance.",
      "required": true,
      "value": "entity-filer"
    },
    {
      "name": "APP_GROUP",
      "displayName": "App Group",
      "description": "The name assigned to all of the deployments in this project.",
      "required": true,
      "value": "entity-filer"
    },
    {
      "name": "APP_FILE",
      "displayName": "APP_FILE",
      "description": "APP_FILE to run the service.",
      "required": true,
      "value": "pay_filer.py"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "description": "A valid database name used by the service.",
      "required": true,
      "value": "lear"
    },
    {
      "name": "SENTRY_DSN",
      "displayName": "Sentry Init URL",
      "description": "Sentry DSN URL to initialize the Sentry SDK",
      "required": true,
      "value": "https://account.sentry.ioo/project/id"
    },
    {
      "name": "PAYMENT_SVC_URL",
      "displayName": "Payment Service URL",
      "description": "The payment service URL.",
      "required": true,
      "value": "http://pay-api.l4ygcl-dev.svc/api/v1/payments"
    },
    {
      "name": "NATS_SERVERS",
      "displayName": "NATS Streaming Service URL",
      "description": "NATS Streaming Service URL.",
      "required": true,
      "value": "nats://nats-streaming.hak2zo-dev.svc:4222"
    },
    {
      "name": "NATS_CLUSTER_ID",
      "displayName": "NATS Cluster Id",
      "description": "NATS cluster id.",
      "required": true,
      "value": "test-cluster"
    },
    {
      "name": "NATS_CLIENT_NAME",
      "displayName": "NATS Client Name",
      "description": "NATS client name as displayed in the connection info.",
      "required": true,
      "value": "entity.filing.payment.worker"
    },
    {
      "name": "NATS_SUBJECT",
      "displayName": "NATS Subject Name",
      "description": "A unique NATS subject name that is set to receive payment tokens.",
      "required": true,
      "value": "entity.filing.payment"
    },
    {
      "name": "NATS_FILER_SUBJECT",
      "displayName": "NATS Filer Subject Name",
      "description": "A unique NATS subject name that is set to manage filing processing.",
      "required": true,
      "value": "entity.filing.filer"
    },
    {
      "name": "NATS_ENTITY_EVENT_SUBJECT",
      "displayName": "NATS Entity Event Stream",
      "description": "A unique NATS subject name that is set to manage entity event processing.",
      "required": true,
      "value": "entity.events"
    },
    {
      "name": "NATS_QUEUE",
      "displayName": "NATS Queue Name",
      "description": "A unique NATS queue name that is set to receive payment tokens.",
      "required": true,
      "value": "filing-worker"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "required": true,
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "value": "gl2uos-tools"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "dev"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "Resources CPU Request",
      "description": "The resources CPU request (in cores) for this build.",
      "required": true,
      "value": "100m"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "Resources CPU Limit",
      "description": "The resources CPU limit (in cores) for this build.",
      "required": true,
      "value": "750m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Resources Memory Request",
      "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "100Mi"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Resources Memory Limit",
      "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "200Mi"
    },
    {
      "name": "REPLICAS",
      "displayName": "The number of replicas to run",
      "description": "The number of replicas to run in this environment.",
      "required": true,
      "value": "1"
    },
    {
      "name": "ACCOUNT_SVC_AUTH_URL",
      "displayName": "Account service URL.",
      "description": "Service account URL.",
      "required": true,
      "value": "https://sso-dev.pathfinder.gov.bc.ca/auth/realms/fcf0kpqr/protocol/openid-connect/token"
    },
    {
      "name": "ACCOUNT_SVC_ENTITY_URL",
      "displayName": "Account service entity URL.",
      "description": "Service account entity URL.",
      "required": true,
      "value": "https://auth-api-dev.pathfinder.gov.bc.ca/api/v1/entities"
    },
    {
      "name": "ACCOUNT_SVC_AFFILIATE_URL",
      "displayName": "Account service affiliate URL.",
      "description": "Service account affiliate URL.",
      "required": true,
      "value": "https://auth-api-dev.pathfinder.gov.bc.ca/api/v1/orgs/{account_id}/affiliations"
    },
    {
      "name": "ACCOUNT_SVC_CLIENT_ID",
      "displayName": "Service Account Client ID.",
      "description": "Service Account Client ID.",
      "required": true,
      "value": "valid-service-account-user"
    },
    {
      "name": "ACCOUNT_SVC_CLIENT_SECRET",
      "displayName": "Service Account Secret.",
      "description": "Service Account Secret.",
      "required": true,
      "value": "valid-service-account-secret"
    },
    {
      "name": "ACCOUNT_SVC_TIMEOUT",
      "displayName": "Service Account timeout.",
      "description": "Service Account timeout.",
      "required": true,
      "value": 20
    },
    {
      "name": "NAMEX_API",
      "displayName": "Namex API URL.",
      "description": "NameX API URL in the LEAR namespace.",
      "required": true,
      "value": "http://namex-api-dev:8080/api/v1/requests/"
    }
  ]
}
