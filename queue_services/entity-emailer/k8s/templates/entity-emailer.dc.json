{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "description": "Deployment template for a entity-filer service.",
            "tags": "${NAME}-${TAG_NAME}"
        },
        "name": "${NAME}-${TAG_NAME}-deploy-template"
    },
    "objects": [
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}-${TAG_NAME}",
                "labels": {
                    "app": "${NAME}-${TAG_NAME}",
                    "app-group": "${APP_GROUP}-${TAG_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${NAME}-${TAG_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${IMAGE_NAMESPACE}",
                                "name": "${NAME}:${TAG_NAME}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": "${REPLICAS}",
                "test": false,
                "selector": {
                    "app": "${NAME}-${TAG_NAME}",
                    "deploymentconfig": "${NAME}-${TAG_NAME}"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "${NAME}-${TAG_NAME}",
                            "deploymentconfig": "${NAME}-${TAG_NAME}"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "${NAME}-${TAG_NAME}",
                                "image": "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${NAME}:${TAG_NAME}",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 7070,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": 7070,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "${CPU_LIMIT}",
                                        "memory": "${MEMORY_LIMIT}"
                                    },
                                    "requests": {
                                        "cpu": "${CPU_REQUEST}",
                                        "memory": "${MEMORY_REQUEST}"
                                    }
                                },
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "DATABASE_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "postgresql-${TAG_NAME}",
                                                "key": "database-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATABASE_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "postgresql-${TAG_NAME}",
                                                "key": "database-password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATABASE_NAME",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "DATABASE_NAME"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATABASE_HOST",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "DATABASE_HOST"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DB_PORT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "DB_PORT"
                                            }
                                        }
                                    },
                                    {
                                        "name": "APP_FILE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "APP_FILE"
                                            }
                                        }
                                    },
                                    {
                                        "name": "SENTRY_DSN",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "SENTRY_DSN"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NATS_SERVERS",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "NATS_SERVERS"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NATS_CLUSTER_ID",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "NATS_CLUSTER_ID"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NATS_CLIENT_NAME",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "NATS_CLIENT_NAME"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NATS_EMAILER_SUBJECT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "NATS_EMAILER_SUBJECT"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NATS_ENTITY_EVENT_SUBJECT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "NATS_ENTITY_EVENT_SUBJECT"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NATS_QUEUE",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "NATS_QUEUE"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DASHBOARD_URL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "DASHBOARD_URL"
                                            }
                                        }
                                    },
                                    {
                                        "name": "NOTIFY_API_URL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "NOTIFY_API_URL"
                                            }
                                        }
                                    },
                                    {
                                        "name": "LEGAL_API_URL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "LEGAL_API_URL"
                                            }
                                        }
                                    },
                                    {
                                        "name": "PAY_API_URL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "PAY_API_URL"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ACCOUNT_SVC_AUTH_URL",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "ACCOUNT_SVC_AUTH_URL"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ACCOUNT_SVC_CLIENT_ID",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "ACCOUNT_SVC_CLIENT_ID"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ACCOUNT_SVC_CLIENT_SECRET",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${NAME}-${TAG_NAME}-config",
                                                "key": "ACCOUNT_SVC_CLIENT_SECRET"
                                            }
                                        }
                                    }
                                ]
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            }
        },
        {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}-${TAG_NAME}-config",
                "labels": {
                    "app": "${NAME}-${TAG_NAME}",
                    "app-group": "${APP_GROUP}-${TAG_NAME}"
                }
            },
            "data": {
                "APP_FILE": "${APP_FILE}",
                "DATABASE_HOST": "postgresql-${TAG_NAME}",
                "DATABASE_NAME": "${DATABASE_NAME}",
                "DB_PORT": "5432",
                "SENTRY_DSN": "${SENTRY_DSN}",
                "NATS_SERVERS": "${NATS_SERVERS}",
                "NATS_CLUSTER_ID": "${NATS_CLUSTER_ID}",
                "NATS_CLIENT_NAME": "${NATS_CLIENT_NAME}",
                "NATS_EMAILER_SUBJECT": "${NATS_EMAILER_SUBJECT}",
                "NATS_ENTITY_EVENT_SUBJECT": "${NATS_ENTITY_EVENT_SUBJECT}",
                "DASHBOARD_URL": "${DASHBOARD_URL}",
                "NOTIFY_API_URL": "${NOTIFY_API_URL}",
                "LEGAL_API_URL": "${LEGAL_API_URL}",
                "PAY_API_URL": "${PAY_API_URL}",
                "ACCOUNT_SVC_AUTH_URL": "${ACCOUNT_SVC_AUTH_URL}",
                "ACCOUNT_SVC_CLIENT_ID": "${ACCOUNT_SVC_CLIENT_ID}",
                "ACCOUNT_SVC_CLIENT_SECRET": "${ACCOUNT_SVC_CLIENT_SECRET}"
            }
        }
    ],
    "parameters": [
        {
            "name": "NAME",
            "displayName": "Name",
            "description": "The name assigned to all of the OpenShift resources associated to the server instance.",
            "required": true,
            "value": "entity-emailer"
        },
        {
            "name": "APP_GROUP",
            "displayName": "App Group",
            "description": "The name assigned to all of the deployments in this project.",
            "required": true,
            "value": "entity-emailer"
        },
        {
            "name": "APP_FILE",
            "displayName": "APP_FILE",
            "description": "APP_FILE to run the service.",
            "required": true,
            "value": "pay_filer.py"
        },
        {
            "name": "DATABASE_NAME",
            "displayName": "Database Name",
            "description": "A valid database name used by the service.",
            "required": true,
            "value": "lear"
        },
        {
            "name": "SENTRY_DSN",
            "displayName": "Sentry Init URL",
            "description": "Sentry DSN URL to initialize the Sentry SDK",
            "required": true,
            "value": "https://account.sentry.ioo/project/id"
        },
        {
            "name": "NATS_SERVERS",
            "displayName": "NATS Streaming Service URL",
            "description": "NATS Streaming Service URL.",
            "required": true,
            "value": "nats://nats-streaming.hak2zo-dev.svc:4222"
        },
        {
            "name": "NATS_CLUSTER_ID",
            "displayName": "NATS Cluster Id",
            "description": "NATS cluster id.",
            "required": true,
            "value": "test-cluster"
        },
        {
            "name": "NATS_CLIENT_NAME",
            "displayName": "NATS Client Name",
            "description": "NATS client name as displayed in the connection info.",
            "required": true,
            "value": "entity.email.worker"
        },
        {
            "name": "NATS_EMAILER_SUBJECT",
            "displayName": "NATS Subject Name",
            "description": "A unique NATS subject name that is set to receive email msgs.",
            "required": true,
            "value": "entity.email"
        },
        {
            "name": "NATS_ENTITY_EVENT_SUBJECT",
            "displayName": "NATS Entity Event Stream",
            "description": "A unique NATS subject name that is set to manage entity event processing.",
            "required": true,
            "value": "entity.events"
        },
        {
            "name": "NATS_QUEUE",
            "displayName": "NATS Queue Name",
            "description": "A unique NATS queue name that is set to receive email tokens.",
            "required": true,
            "value": "email-worker"
        },
        {
            "name": "DASHBOARD_URL",
            "displayName": "DASHBOARD_URL",
            "description": "Url to the business dashboard.",
            "required": true,
            "value": ""
        },
        {
            "name": "NOTIFY_API_URL",
            "displayName": "NOTIFY_API_URL",
            "description": "Url to the email sender service.",
            "required": true,
            "value": ""
        },
        {
            "name": "LEGAL_API_URL",
            "displayName": "LEGAL_API_URL",
            "description": "Url to the legal api.",
            "required": true,
            "value": ""
        },
        {
            "name": "PAY_API_URL",
            "displayName": "PAY_API_URL",
            "description": "Url to the payment api.",
            "required": true,
            "value": ""
        },
        {
            "name": "ACCOUNT_SVC_AUTH_URL",
            "displayName": "ACCOUNT_SVC_AUTH_URL",
            "description": "Url to the auth service.",
            "required": true,
            "value": ""
        },
        {
            "name": "ACCOUNT_SVC_CLIENT_ID",
            "displayName": "ACCOUNT_SVC_CLIENT_ID",
            "description": "keycloak client.",
            "required": true,
            "value": ""
        },
        {
            "name": "ACCOUNT_SVC_CLIENT_SECRET",
            "displayName": "ACCOUNT_SVC_CLIENT_SECRET",
            "description": "keycloak secret",
            "required": true,
            "value": ""
        },
        {
            "name": "IMAGE_NAMESPACE",
            "displayName": "Image Namespace",
            "required": true,
            "description": "The namespace of the OpenShift project containing the imagestream for the application.",
            "value": "gl2uos-tools"
        },
        {
            "name": "TAG_NAME",
            "displayName": "Environment TAG name",
            "description": "The TAG name for this environment, e.g., dev, test, prod",
            "required": true,
            "value": "dev"
        },
        {
            "name": "CPU_REQUEST",
            "displayName": "Resources CPU Request",
            "description": "The resources CPU request (in cores) for this build.",
            "required": true,
            "value": "100m"
        },
        {
            "name": "CPU_LIMIT",
            "displayName": "Resources CPU Limit",
            "description": "The resources CPU limit (in cores) for this build.",
            "required": true,
            "value": "750m"
        },
        {
            "name": "MEMORY_REQUEST",
            "displayName": "Resources Memory Request",
            "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
            "required": true,
            "value": "100Mi"
        },
        {
            "name": "MEMORY_LIMIT",
            "displayName": "Resources Memory Limit",
            "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
            "required": true,
            "value": "200Mi"
        },
        {
            "name": "REPLICAS",
            "displayName": "The number of replicas to run",
            "description": "The number of replicas to run in this environment.",
            "required": true,
            "value": "1"
        }
    ]
}