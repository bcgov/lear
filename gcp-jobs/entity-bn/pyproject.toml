[tool.poetry]
name = "entity-bn"
version = "0.1.0"
description = ""
authors = ["BrandonSharratt <brandon@daxiom.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.13.0"
jupyter = "^1.1.1"
SQLAlchemy = "^2.0.40"
psycopg2-binary = "^2.9.10"
ipython-sql = "^0.5.0"
python-dotenv = "^1.1.0"
papermill = "^2.6.0"
Flask = "^3.1.0"
pg8000 = "^1.31.2"
structured-logging = {git = "https://github.com/bcgov/sbc-connect-common.git", rev = "main", subdirectory = "python/structured-logging"}

[tool.poetry.group.dev.dependencies]
ruff = "^0.11.2"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".vscode",
    "dist",
    "htmlcov",
    ".venv",
    "migrations",
    "devops",
    ".history",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = [
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "Q",   # flake8-quotes
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PL",  # pyLint
    "PGH", # pygrep
    "RUF", # ruff checks
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
    "F", # pyflakes
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = [
    "ERA", # do not autoremove commented out code
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
known-first-party = ["structured_logging"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.extend-per-file-ignores]
"**/__init__.py" = ["F401"]  # used for imports
"**/tracker-errors.ipynb" = ["F821"]  # used for imports

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
