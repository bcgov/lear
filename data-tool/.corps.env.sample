### CORPS MIGRATION PIPELINE

# Flask
FLASK_ENV=development
#FLASK_ENV=testing
FLASK_APP=wsgi.py
SECRET=some md5 hash
APP_SETTINGS=dev


## ------------------------------------------------------------------------------------------------------------
## LOCAL_MIGR_TEST
## ------------------------------------------------------------------------------------------------------------
DATA_LOAD_ENV=local_migr_test
SKIP_IF_RUNNING_HANDLER_ENABLED=False

# Source database
# COLIN POSTGRES MIGRATION DB (used for local/dev)
#
DATABASE_USERNAME_COLIN_MIGR=
DATABASE_PASSWORD_COLIN_MIGR=
DATABASE_NAME_COLIN_MIGR=
DATABASE_HOST_COLIN_MIGR=
DATABASE_PORT_COLIN_MIGR=

# Target database
## SQL Alchemy local lear migration db
DATABASE_USERNAME=
DATABASE_PASSWORD=
DATABASE_NAME=
DATABASE_HOST=
DATABASE_PORT=

DATABASE_POOL_PRE_PING=True
DATABASE_POOL_SIZE=1000
DATABASE_MAX_OVERFLOW=15
DATABASE_POOL_RECYCLE=3600

#corp name suffix to append for test purposes
CORP_NAME_SUFFIX=" - IMPORT_TEST"

#AUTH - NO Auth values as no auth creation should take place
UPDATE_ENTITY=False
AFFILIATE_ENTITY=False
AFFILIATE_ENTITY_ACCOUNT_ID=

USE_CUSTOM_CONTACT_EMAIL=False
CUSTOM_CONTACT_EMAIL=


AUTH_SVC_URL=
ACCOUNT_SVC_AUTH_URL=
ACCOUNT_SVC_ENTITY_URL=
ACCOUNT_SVC_AFFILIATE_URL=
ACCOUNT_SVC_CLIENT_ID=
ACCOUNT_SVC_CLIENT_SECRET=
ACCOUNT_SVC_TIMEOUT=


# delete script
## Auth database
DATABASE_USERNAME_AUTH=
DATABASE_PASSWORD_AUTH=
DATABASE_NAME_AUTH=
DATABASE_HOST_AUTH=
DATABASE_PORT_AUTH=

## batch configs, must be positive integer
TOMBSTONE_BATCHES=1
TOMBSTONE_BATCH_SIZE=300

DELETE_BATCHES=1
DELETE_BATCH_SIZE=300

## delete corps record in auth db, corp_processing of colin extract
DELETE_AUTH_RECORDS=False
DELETE_CORP_PROCESSING_RECORDS=True
