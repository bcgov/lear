apiVersion: v1
kind: Template
metadata:
  name: apicurio-studio
message: |-
  Congratulations on deploying Apicurio Studio into OpenShift!

  All Apicurio components have been deployed and configured.  Please note
  that the authentication component (Keycloak) requires additional configuration
  for it to support all Apicurio functionality (specifically account linking).
  In addition, you may want to configure Keycloak to your particular taste (for
  example you may want to enable social logins).

objects:
# Image Streams for the Apicurio components
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: api
  spec:
    tags:
      - name: 0.2.26.Final
        from:
          kind: DockerImage
          name: apicurio/apicurio-studio-api:0.2.26.Final
        importPolicy:
          scheduled: true
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ws
  spec:
    tags:
      - name: 0.2.26.Final
        from:
          kind: DockerImage
          name: apicurio/apicurio-studio-ws:0.2.26.Final
        importPolicy:
          scheduled: true
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ui
  spec:
    tags:
      - name: 0.2.26.Final
        from:
          kind: DockerImage
          name: apicurio/apicurio-studio-ui:0.2.26.Final
        importPolicy:
          scheduled: true
# Services for: API, WS, UI
- apiVersion: v1
  kind: Service
  metadata:
    name: apicurio-studio-api
    labels:
      app: apicurio-studio-api
      template: apicurio-studio
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/system/metrics'
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: apicurio-studio-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: apicurio-studio-ws
    labels:
      app: apicurio-studio-ws
      template: apicurio-studio
    annotations:
      prometheus.io/scrape: 'true'
      prometheus.io/path: '/metrics'
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: apicurio-studio-ws
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-ui
      template: apicurio-studio
    name: apicurio-studio-ui
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: apicurio-studio-ui
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
# Apicurio API Deployment Configuration
# #####################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-api
      template: apicurio-studio
    name: apicurio-studio-api
  spec:
    replicas: 1
    selector:
      app: apicurio-studio-api
      deploymentconfig: apicurio-studio-api
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: apicurio-studio-api
          deploymentconfig: apicurio-studio-api
          template: apicurio-studio
      spec:
        replicas: 1
        containers:
        - image: api:0.2.26.Final
          imagePullPolicy: Always
          name: apicurio-studio-api
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
             - name: APICURIO_KC_AUTH_URL
               value: https://${AUTH_ROUTE}/auth
             - name: APICURIO_KC_REALM
               value: ${KC_REALM}
             - name: APICURIO_DB_DRIVER_NAME
               value: postgresql
             - name: APICURIO_DB_CONNECTION_URL
               value: jdbc:postgresql://postgresql:5432/${DB_NAME}
             - name: APICURIO_DB_TYPE
               value: postgresql9
             - name: APICURIO_DB_USER_NAME
               valueFrom:
                 secretKeyRef:
                   name: postgresql
                   key: database-user
             - name: APICURIO_DB_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: postgresql
                   key: database-password
             - name: APICURIO_MIN_HEAP
               value: ${API_JVM_MIN}
             - name: APICURIO_MAX_HEAP
               value: ${API_JVM_MAX}
          resources:
            limits:
              cpu: ${API_CPU_LIMIT}
              memory: ${API_MEM_LIMIT}
            requests:
              cpu: ${API_CPU_REQUEST}
              memory: ${API_MEM_REQUEST}
          livenessProbe:
            httpGet:
              path: /system/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /system/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - apicurio-studio-api
        from:
          kind: ImageStreamTag
          name: 'api:0.2.26.Final'
    - type: ConfigChange
  status: {}
# Apicurio WS Deployment Configuration
# #####################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-ws
      template: apicurio-studio
    name: apicurio-studio-ws
  spec:
    replicas: 1
    selector:
      app: apicurio-studio-ws
      deploymentconfig: apicurio-studio-ws
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: apicurio-studio-ws
          deploymentconfig: apicurio-studio-ws
          template: apicurio-studio
      spec:
        replicas: 1
        containers:
        - image: ws:0.2.26.Final
          imagePullPolicy: Always
          name: apicurio-studio-ws
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
             - name: APICURIO_DB_DRIVER_NAME
               value: postgresql
             - name: APICURIO_DB_CONNECTION_URL
               value: jdbc:postgresql://postgresql:5432/${DB_NAME}
             - name: APICURIO_DB_TYPE
               value: postgresql9
             - name: APICURIO_DB_USER_NAME
               valueFrom:
                 secretKeyRef:
                   name: postgresql
                   key: database-user
             - name: APICURIO_DB_PASSWORD
               valueFrom:
                 secretKeyRef:
                   name: postgresql
                   key: database-password
             - name: APICURIO_MIN_HEAP
               value: ${WS_JVM_MIN}
             - name: APICURIO_MAX_HEAP
               value: ${WS_JVM_MAX}
          resources:
            limits:
              cpu: ${WS_CPU_LIMIT}
              memory: ${WS_MEM_LIMIT}
            requests:
              cpu: ${WS_CPU_REQUEST}
              memory: ${WS_MEM_REQUEST}
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - apicurio-studio-ws
        from:
          kind: ImageStreamTag
          name: 'ws:0.2.26.Final'
    - type: ConfigChange
  status: {}
# Apicurio UI Deployment Configuration
# ####################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      app: apicurio-studio-ui
      template: apicurio-studio
    name: apicurio-studio-ui
  spec:
    replicas: 1
    selector:
      app: apicurio-studio-ui
      deploymentconfig: apicurio-studio-ui
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      activeDeadlineSeconds: 21600
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: apicurio-studio-ui
          deploymentconfig: apicurio-studio-ui
          template: apicurio-studio
      spec:
        replicas: 1
        containers:
        - image: ui:0.2.26.Final
          imagePullPolicy: Always
          name: apicurio-studio-ui
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
             - name: APICURIO_KC_AUTH_URL
               value: https://${AUTH_ROUTE}/auth
             - name: APICURIO_KC_REALM
               value: ${KC_REALM}
             - name: APICURIO_UI_HUB_API_URL
               value: https://${API_ROUTE}
             - name: APICURIO_UI_EDITING_URL
               value: wss://${WS_ROUTE}
             - name: APICURIO_UI_LOGOUT_REDIRECT_URI
               value: /
             - name: APICURIO_MIN_HEAP
               value: ${UI_JVM_MIN}
             - name: APICURIO_MAX_HEAP
               value: ${UI_JVM_MAX}
          resources:
            limits:
              cpu: ${UI_CPU_LIMIT}
              memory: ${UI_MEM_LIMIT}
            requests:
              cpu: ${UI_CPU_REQUEST}
              memory: ${UI_MEM_REQUEST}
          livenessProbe:
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - apicurio-studio-ui
        from:
          kind: ImageStreamTag
          name: 'ui:0.2.26.Final'
    - type: ConfigChange
  status: {}
# The Routes: auth, api, ws, ui (no route needed for postgresql)
- apiVersion: v1
  kind: Route
  metadata:
    name: apicurio-studio-api
    creationTimestamp: null
    labels:
      app: apicurio-studio-api
      template: apicurio-studio
  spec:
    host: ${API_ROUTE}
    to:
      kind: Service
      name: apicurio-studio-api
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    name: apicurio-studio-ws
    creationTimestamp: null
    labels:
      app: apicurio-studio-ws
      template: apicurio-studio
  spec:
    host: ${WS_ROUTE}
    to:
      kind: Service
      name: apicurio-studio-ws
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
- apiVersion: v1
  kind: Route
  metadata:
    name: apicurio-studio-ui
    creationTimestamp: null
    labels:
      app: apicurio-studio-ui
      template: apicurio-studio
  spec:
    host: ${UI_ROUTE}
    to:
      kind: Service
      name: apicurio-studio-ui
      weight: 100
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    wildcardPolicy: None
# Template Parameters
parameters:
- name: UI_ROUTE
  displayName: User Interface Route Name
  description: The route name to use for the UI.
  value: apicurio-studio.example.com
  required: true
- name: API_ROUTE
  displayName: API Route Name
  description: The route name to use for the API.
  value: apicurio-studio-api.example.com
  required: true
- name: WS_ROUTE
  displayName: Editing Route Name
  description: The route name to use for editing layer (websocket based).
  value: apicurio-studio-ws.example.com
  required: true
- name: AUTH_ROUTE
  displayName: Authentication Route Name
  description: The route name to use for Keycloak Authentication.
  value: apicurio-studio-auth.example.com
  required: true
- name: DB_USER
  displayName: PostgreSQL Connection Username
  description: Username for PostgreSQL user that will be used for accessing the database.
  required: true
- name: DB_PASS
  displayName: PostgreSQL Connection Password
  description: Password for the PostgreSQL connection user.
  required: true
- name: DB_NAME
  displayName: Database Name
  description: The name of the Postgresql database.
  value: apicuriodb
  required: true
- name: KC_REALM
  displayName: Keycloak Realm
  description: The name of the Keycloak realm to use for authentication.
  value: apicurio
  required: true
- name: KC_USER
  displayName: Keycloak Admin Username
  description: Username for the Keycloak admin user.
  generate: expression
  required: true
- name: KC_PASS
  displayName: Keycloak Admin Password
  description: Password for the Keycloak admin user.
  required: true
- name: UI_JVM_MIN
  displayName: UI Min JVM Memory Limit
  description: UI Min JVM Memory Limit
  value: 512m
  required: false
- name: UI_JVM_MAX
  displayName: UI Max JVM Memory Limit
  description: UI Max JVM Memory Limit
  value: 1200m
  required: false
- name: UI_MEM_LIMIT
  displayName: UI Max Memory Limit
  description: UI Pods Max Memory Limit
  value: 1500Mi
  required: true
- name: UI_MEM_REQUEST
  displayName: UI Memory Request
  description: UI Pods Memory Request
  value: 700Mi
  required: true
- name: UI_CPU_LIMIT
  displayName: UI Max CPU Limit
  description: UI Pods Max CPU Limit
  value: '1'
  required: true
- name: UI_CPU_REQUEST
  displayName: UI CPU Request
  description: UI Pods CPU Request
  value: 100m
  required: true
- name: API_JVM_MIN
  displayName: API Min JVM Memory Limit
  description: API Min JVM Memory Limit
  value: 512m
  required: false
- name: API_JVM_MAX
  displayName: API Max JVM Memory Limit
  description: API Max JVM Memory Limit
  value: 1400m
  required: false
- name: API_MEM_LIMIT
  displayName: API Max Memory Limit
  description: API Pods Max Memory Limit
  value: 1700Mi
  required: true
- name: API_MEM_REQUEST
  displayName: API Memory Request
  description: API Pods Memory Request
  value: 800Mi
  required: true
- name: API_CPU_LIMIT
  displayName: API Max CPU Limit
  description: API Pods Max CPU Limit
  value: '1'
  required: true
- name: API_CPU_REQUEST
  displayName: API CPU Request
  description: API Pods CPU Request
  value: 100m
  required: true
- name: WS_JVM_MIN
  displayName: WS Min JVM Memory Limit
  description: WS Min JVM Memory Limit
  value: 512m
  required: false
- name: WS_JVM_MAX
  displayName: WS Max JVM Memory Limit
  description: WS Max JVM Memory Limit
  value: 1400m
  required: false
- name: WS_MEM_LIMIT
  displayName: WS Max Memory Limit
  description: WS Pods Max Memory Limit
  value: 1800Mi
  required: true
- name: WS_MEM_REQUEST
  displayName: WS Memory Request
  description: WS Pods Memory Request
  value: 900Mi
  required: true
- name: WS_CPU_LIMIT
  displayName: WS Max CPU Limit
  description: WS Pods Max CPU Limit
  value: '1'
  required: true
- name: WS_CPU_REQUEST
  displayName: WS CPU Request
  description: WS Pods CPU Request
  value: 100m
  required: true
