[tool.poetry]
name = "business-model"
version = "3.0.0"
description = "Provides the Business Registry model defined by SQLAlchemy and Alembic"
authors = ["thor <thor@wolpert.ca>"]
license = "BSD-3-Clause"
readme = "README.md"
packages = [{include = "business_model", from = "src"},
            {include = "business_model_migrations", from = "src"}
           ]

[tool.poetry.dependencies]
python = "^3.11"
Flask-SQLAlchemy = "^3.0.5"
pycountry = "^22.3.5"
datedelta = "^1.4"
registry-schemas = {git = "https://github.com/bcgov/business-schemas.git", rev = "2.18.19"}

## sql-versioning = {path = "../sql-versioning"}
sql-versioning = { git = "https://github.com/bcgov/lear.git", subdirectory = "python/common/sql-versioning", branch = "feature-legal-name" }

[tool.poetry.group.dev.dependencies]
Flask = "^2.3.2"
Flask-Migrate = "^4.0.4"
flask-babel = "^3.1.0"
python-dotenv = "^1.0.0"
pytest = "^7.4.0"
pytest-mock = "^3.11.1"
black = "^23.12.1"
isort = "^5.13.2"
pg8000 = "^1.29.8"
freezegun = "^1.2.2"

[tool.black]
target-version =  ["py310", "py311", "py312"]
line-length = 120
include = '\.pyi?$'
extend-exclude = '''
/(
  # The following are specific to Black, you probably don't want those.
  migrations
  | devops
)/
'''

[tool.isort]
atomic = true
profile = "black"
line_length = 120
skip_gitignore = true
skip_glob = ["migrations", "devops"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
