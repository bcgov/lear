"""empty message

Revision ID: 004f7558063f
Revises: 03201f7bc580
Create Date: 2023-06-04 00:37:12.907231

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "004f7558063f"
down_revision = "03201f7bc580"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "addresses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address_type", sa.String(length=4096), nullable=True),
        sa.Column("street", sa.String(length=4096), nullable=True),
        sa.Column("street_additional", sa.String(length=4096), nullable=True),
        sa.Column("city", sa.String(length=4096), nullable=True),
        sa.Column("region", sa.String(length=4096), nullable=True),
        sa.Column("country", sa.String(length=2), nullable=True),
        sa.Column("postal_code", sa.String(length=15), nullable=True),
        sa.Column("delivery_instructions", sa.String(length=4096), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("change_filing_id", sa.Integer(), nullable=True),
        sa.Column("office_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("alternate_name_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(["office_id"], ["offices.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["alternate_name_id"],
            ["alternate_names.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("addresses", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_addresses_address_type"), ["address_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_addresses_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_addresses_legal_entity_id"), ["legal_entity_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_addresses_street"), ["street"], unique=False)
        batch_op.create_index(batch_op.f("ix_addresses_alternate_name_id"), ["alternate_name_id"], unique=False)

    op.create_table(
        "colin_last_update",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("last_update", sa.DateTime(timezone=True), nullable=True),
        sa.Column("last_event_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "corp_types",
        sa.Column("corp_type_cd", sa.String(length=5), nullable=False),
        sa.Column("colin_ind", sa.String(length=1), nullable=False),
        sa.Column("corp_class", sa.String(length=10), nullable=False),
        sa.Column("short_desc", sa.String(length=25), nullable=False),
        sa.Column("full_desc", sa.String(length=100), nullable=False),
        sa.Column("legislation", sa.String(length=100), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("corp_type_cd"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "corp_types_history",
        sa.Column("corp_type_cd", sa.String(length=5), autoincrement=False, nullable=False),
        sa.Column("colin_ind", sa.String(length=1), autoincrement=False, nullable=False),
        sa.Column("corp_class", sa.String(length=10), autoincrement=False, nullable=False),
        sa.Column("short_desc", sa.String(length=25), autoincrement=False, nullable=False),
        sa.Column("full_desc", sa.String(length=100), autoincrement=False, nullable=False),
        sa.Column("legislation", sa.String(length=100), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("corp_type_cd", "version"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "dc_definitions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "credential_type", sa.Enum("business", "business_relationship", name="credentialtype"), nullable=False
        ),
        sa.Column("schema_id", sa.String(length=100), nullable=True),
        sa.Column("schema_name", sa.String(length=50), nullable=True),
        sa.Column("schema_version", sa.String(length=10), nullable=True),
        sa.Column("credential_definition_id", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "naics_structures",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("naics_key", sa.UUID(), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("hierarchical_structure", sa.String(length=25), nullable=False),
        sa.Column("code", sa.String(length=10), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("class_title", sa.String(length=150), nullable=False),
        sa.Column("superscript", sa.String(length=5), nullable=True),
        sa.Column("class_definition", sa.String(length=5100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("naics_structures", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_naics_structures_class_definition"), ["class_definition"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_structures_class_title"), ["class_title"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_structures_code"), ["code"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_structures_level"), ["level"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_structures_version"), ["version"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_structures_year"), ["year"], unique=False)

    op.create_table(
        "office_types",
        sa.Column("identifier", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("identifier"),
    )
    op.create_table(
        "registration_bootstrap",
        sa.Column("identifier", sa.String(length=10), nullable=False),
        sa.Column("account", sa.Integer(), nullable=True),
        sa.Column("last_modified", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("identifier"),
    )
    with op.batch_alter_table("registration_bootstrap", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_registration_bootstrap_account"), ["account"], unique=False)

    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=1000), nullable=True),
        sa.Column("firstname", sa.String(length=1000), nullable=True),
        sa.Column("lastname", sa.String(length=1000), nullable=True),
        sa.Column("middlename", sa.String(length=1000), nullable=True),
        sa.Column("email", sa.String(length=1024), nullable=True),
        sa.Column("sub", sa.String(length=(1024)), nullable=True),
        sa.Column("iss", sa.String(length=1024), nullable=True),
        sa.Column("idp_userid", sa.String(length=(1024)), nullable=True),
        sa.Column("login_source", sa.String(length=200), nullable=True),
        sa.Column("creation_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("sub"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_idp_userid"), ["idp_userid"], unique=False)
        batch_op.create_index(batch_op.f("ix_users_username"), ["username"], unique=False)

    op.create_table(
        "users_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("username", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("firstname", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("lastname", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("middlename", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("email", sa.String(length=1024), autoincrement=False, nullable=True),
        sa.Column("sub", sa.String(length=36), autoincrement=False, nullable=True),
        sa.Column("iss", sa.String(length=1024), autoincrement=False, nullable=True),
        sa.Column("idp_userid", sa.String(length=256), autoincrement=False, nullable=True),
        sa.Column("login_source", sa.String(length=200), autoincrement=False, nullable=True),
        sa.Column("creation_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("users_history", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_history_idp_userid"), ["idp_userid"], unique=False)
        batch_op.create_index(batch_op.f("ix_users_history_username"), ["username"], unique=False)

    op.create_table(
        "addresses_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("address_type", sa.String(length=4096), autoincrement=False, nullable=True),
        sa.Column("street", sa.String(length=4096), autoincrement=False, nullable=True),
        sa.Column("street_additional", sa.String(length=4096), autoincrement=False, nullable=True),
        sa.Column("city", sa.String(length=4096), autoincrement=False, nullable=True),
        sa.Column("region", sa.String(length=4096), autoincrement=False, nullable=True),
        sa.Column("country", sa.String(length=2), autoincrement=False, nullable=True),
        sa.Column("postal_code", sa.String(length=15), autoincrement=False, nullable=True),
        sa.Column("delivery_instructions", sa.String(length=4096), autoincrement=False, nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("office_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.Column("alternate_name_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["alternate_name_id"],
            ["alternate_names.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("addresses_history", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_addresses_history_address_type"), ["address_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_addresses_history_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_addresses_history_legal_entity_id"), ["legal_entity_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_addresses_history_street"), ["street"], unique=False)
        batch_op.create_index(batch_op.f("ix_addresses_history_alternate_name_id"), ["alternate_name_id"], unique=False)

    op.create_table(
        "aliases",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("alias", sa.String(length=1000), nullable=False),
        sa.Column("type", sa.String(length=20), nullable=False),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("change_filing_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("aliases", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_aliases_alias"), ["alias"], unique=False)
        batch_op.create_index(batch_op.f("ix_aliases_change_filing_id"), ["change_filing_id"], unique=False)

    op.create_table(
        "aliases_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("alias", sa.String(length=1000), autoincrement=False, nullable=False),
        sa.Column("type", sa.String(length=20), autoincrement=False, nullable=False),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("aliases_history", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_aliases_history_alias"), ["alias"], unique=False)
        batch_op.create_index(batch_op.f("ix_aliases_history_change_filing_id"), ["change_filing_id"], unique=False)

    op.create_table(
        "colin_entities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("organization_name", sa.String(length=150), nullable=True),
        sa.Column("identifier", sa.String(length=10), nullable=True),
        sa.Column("email", sa.String(length=254), nullable=True),
        sa.Column("change_filing_id", sa.Integer(), nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("colin_entities", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_colin_entities_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_colin_entities_email"), ["email"], unique=False)
        batch_op.create_index(batch_op.f("ix_colin_entities_identifier"), ["identifier"], unique=False)
        batch_op.create_index(batch_op.f("ix_colin_entities_organization_name"), ["organization_name"], unique=False)

    op.create_table(
        "colin_entities_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("organization_name", sa.String(length=150), autoincrement=False, nullable=True),
        sa.Column("identifier", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("email", sa.String(length=254), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("colin_entities_history", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_colin_entities_history_change_filing_id"), ["change_filing_id"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_colin_entities_history_email"), ["email"], unique=False)
        batch_op.create_index(batch_op.f("ix_colin_entities_history_identifier"), ["identifier"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_colin_entities_history_organization_name"), ["organization_name"], unique=False
        )

    op.create_table(
        "alternate_names_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("identifier", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("name_type", sa.Enum("DBA", "TRANSLATION", name="nametype"), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(length=1000), autoincrement=False, nullable=False),
        sa.Column("bn15", sa.String(length=20), autoincrement=False, nullable=True),
        sa.Column("start_date", sa.DateTime(timezone=True), autoincrement=False, nullable=False),
        sa.Column("end_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("business_start_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("dissolution_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("state", sa.Enum("ACTIVE", "HISTORICAL", name="state"), autoincrement=False, nullable=True),
        sa.Column("state_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("admin_freeze", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("last_modified", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("entity_type", sa.String(length=15), autoincrement=False, nullable=True),
        sa.Column("colin_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("email", sa.String(length=254), autoincrement=False, nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("naics_key", sa.String(length=50), autoincrement=False, nullable=True),
        sa.Column("naics_code", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("naics_description", sa.String(length=300), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["colin_entity_id"],
            ["colin_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["state_filing_id"],
            ["filings.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("alternate_names_history", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_alternate_names_history_change_filing_id"), ["change_filing_id"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_alternate_names_history_name"), ["name"], unique=False)
        batch_op.create_index(batch_op.f("ix_alternate_names_history_identifier"), ["identifier"], unique=False)
        batch_op.create_index(batch_op.f("ix_alternate_names_history_entity_type"), ["entity_type"], unique=False)

    op.create_table(
        "colin_event_ids",
        sa.Column("colin_event_id", sa.Integer(), nullable=False),
        sa.Column("filing_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.PrimaryKeyConstraint("colin_event_id"),
        sa.UniqueConstraint("colin_event_id"),
    )
    op.create_table(
        "comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("comment", sa.String(length=4096), nullable=True),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("alternate_name_id", sa.Integer(), nullable=True),
        sa.Column("staff_id", sa.Integer(), nullable=True),
        sa.Column("filing_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["alternate_name_id"],
            ["alternate_names.id"],
        ),
        sa.ForeignKeyConstraint(
            ["staff_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("comments", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_comments_filing_id"), ["filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_comments_legal_entity_id"), ["legal_entity_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_comments_alternate_name_id"), ["alternate_name_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_comments_staff_id"), ["staff_id"], unique=False)

    op.create_table(
        "dc_connections",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("connection_id", sa.String(length=100), nullable=True),
        sa.Column("invitation_url", sa.String(length=4096), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("connection_state", sa.String(length=50), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("alternate_name_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["alternate_name_id"],
            ["alternate_names.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(length=30), nullable=False),
        sa.Column("file_key", sa.String(length=100), nullable=False),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("alternate_name_id", sa.Integer(), nullable=True),
        sa.Column("filing_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["alternate_name_id"],
            ["alternate_names.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("documents", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_documents_filing_id"), ["filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_documents_legal_entity_id"), ["legal_entity_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_documents_alternate_name_id"), ["alternate_name_id"], unique=False)

    op.create_table(
        "documents_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("type", sa.String(length=30), autoincrement=False, nullable=False),
        sa.Column("file_key", sa.String(length=100), autoincrement=False, nullable=False),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("alternate_name_id", sa.Integer(), nullable=True),
        sa.Column("filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["alternate_name_id"],
            ["alternate_names.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("documents_history", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_documents_history_filing_id"), ["filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_documents_history_legal_entity_id"), ["legal_entity_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_documents_history_alternate_name_id"), ["alternate_name_id"], unique=False)

    op.create_table(
        "legal_entities_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("last_modified", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("last_ledger_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("last_remote_ledger_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("last_ledger_timestamp", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("last_ar_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("last_agm_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("last_coa_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("last_cod_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("legal_name", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("entity_type", sa.String(length=15), autoincrement=False, nullable=True),
        sa.Column("founding_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("start_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("restoration_expiry_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("dissolution_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("cco_expiry_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("continuation_out_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("identifier", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("tax_id", sa.String(length=15), autoincrement=False, nullable=True),
        sa.Column("fiscal_year_end_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("restriction_ind", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("last_ar_year", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("last_ar_reminder_year", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("association_type", sa.String(length=50), autoincrement=False, nullable=True),
        sa.Column("state", sa.Enum("ACTIVE", "HISTORICAL", name="state"), autoincrement=False, nullable=True),
        sa.Column("state_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("admin_freeze", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("submitter_userid", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("send_ar_ind", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("bn9", sa.String(length=9), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.String(length=30), autoincrement=False, nullable=True),
        sa.Column("middle_initial", sa.String(length=30), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.String(length=30), autoincrement=False, nullable=True),
        sa.Column("additional_name", sa.String(length=100), autoincrement=False, nullable=True),
        sa.Column("title", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("email", sa.String(length=254), autoincrement=False, nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("naics_key", sa.String(length=50), autoincrement=False, nullable=True),
        sa.Column("naics_code", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("naics_description", sa.String(length=300), autoincrement=False, nullable=True),
        sa.Column("foreign_jurisdiction", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("foreign_jurisdiction_region", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("foreign_identifier", sa.String(length=15), autoincrement=False, nullable=True),
        sa.Column("foreign_legal_name", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("foreign_legal_type", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("foreign_incorporation_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["submitter_userid"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["state_filing_id"],
            ["filings.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("legal_entities_history", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_legal_entities_history_entity_type"), ["entity_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_history_first_name"), ["first_name"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_history_identifier"), ["identifier"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_history_legal_name"), ["legal_name"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_history_middle_initial"), ["middle_initial"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_history_tax_id"), ["tax_id"], unique=False)

    op.create_table(
        "naics_elements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=10), nullable=False),
        sa.Column("year", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.Column("class_title", sa.String(length=150), nullable=False),
        sa.Column(
            "element_type",
            sa.Enum("ALL_EXAMPLES", "ILLUSTRATIVE_EXAMPLES", "INCLUSIONS", "EXCLUSIONS", name="elementtype"),
            nullable=False,
        ),
        sa.Column("element_description", sa.String(length=500), nullable=False),
        sa.Column("naics_structure_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["naics_structure_id"],
            ["naics_structures.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("naics_elements", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_naics_elements_class_title"), ["class_title"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_elements_code"), ["code"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_naics_elements_element_description"), ["element_description"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_naics_elements_element_type"), ["element_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_elements_level"), ["level"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_elements_naics_structure_id"), ["naics_structure_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_elements_version"), ["version"], unique=False)
        batch_op.create_index(batch_op.f("ix_naics_elements_year"), ["year"], unique=False)

    op.create_table(
        "offices_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("office_type", sa.String(length=75), autoincrement=False, nullable=True),
        sa.Column("deactivated_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("alternate_name_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["alternate_name_id"],
            ["alternate_names.id"],
        ),
        sa.ForeignKeyConstraint(
            ["office_type"],
            ["office_types.identifier"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("offices_history", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_offices_history_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_offices_history_legal_entity_id"), ["legal_entity_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_offices_history_alternate_name_id"), ["alternate_name_id"], unique=False)

    op.create_table(
        "parties",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("party_type", sa.String(length=30), nullable=True),
        sa.Column("first_name", sa.String(length=30), nullable=True),
        sa.Column("middle_initial", sa.String(length=30), nullable=True),
        sa.Column("last_name", sa.String(length=30), nullable=True),
        sa.Column("title", sa.String(length=1000), nullable=True),
        sa.Column("organization_name", sa.String(length=150), nullable=True),
        sa.Column("identifier", sa.String(length=10), nullable=True),
        sa.Column("email", sa.String(length=254), nullable=True),
        sa.Column("change_filing_id", sa.Integer(), nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("parties", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_parties_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_parties_first_name"), ["first_name"], unique=False)
        batch_op.create_index(batch_op.f("ix_parties_middle_initial"), ["middle_initial"], unique=False)

    op.create_table(
        "parties_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("party_type", sa.String(length=30), autoincrement=False, nullable=True),
        sa.Column("first_name", sa.String(length=30), autoincrement=False, nullable=True),
        sa.Column("middle_initial", sa.String(length=30), autoincrement=False, nullable=True),
        sa.Column("last_name", sa.String(length=30), autoincrement=False, nullable=True),
        sa.Column("title", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("organization_name", sa.String(length=150), autoincrement=False, nullable=True),
        sa.Column("identifier", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("email", sa.String(length=254), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("parties_history", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_parties_history_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_parties_history_first_name"), ["first_name"], unique=False)
        batch_op.create_index(batch_op.f("ix_parties_history_middle_initial"), ["middle_initial"], unique=False)

    op.create_table(
        "request_tracker",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "request_type",
            sa.Enum(
                "INFORM_CRA",
                "GET_BN",
                "CHANGE_DELIVERY_ADDRESS",
                "CHANGE_MAILING_ADDRESS",
                "CHANGE_NAME",
                "CHANGE_STATUS",
                "CHANGE_PARTY",
                name="requesttype",
            ),
            nullable=False,
        ),
        sa.Column("is_processed", sa.Boolean(), nullable=True),
        sa.Column("request_object", sa.Text(), nullable=True),
        sa.Column("response_object", sa.Text(), nullable=True),
        sa.Column("retry_number", sa.Integer(), nullable=False),
        sa.Column("service_name", sa.Enum("BN_HUB", name="servicename"), nullable=False),
        sa.Column("creation_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("last_modified", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("message_id", sa.String(length=60), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("alternate_name_id", sa.Integer(), nullable=True),
        sa.Column("filing_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["alternate_name_id"],
            ["alternate_names.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("request_tracker", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_request_tracker_filing_id"), ["filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_request_tracker_legal_entity_id"), ["legal_entity_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_request_tracker_alternate_name_id"), ["alternate_name_id"], unique=False)

    op.create_table(
        "role_addresses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "role_type",
            sa.Enum(
                "applicant",
                "completing_party",
                "custodian",
                "director",
                "incorporator",
                "liquidator",
                "proprietor",
                "partner",
                name="roletypes",
            ),
            nullable=False,
        ),
        sa.Column("change_filing_id", sa.Integer(), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("role_addresses", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_role_addresses_change_filing_id"), ["change_filing_id"], unique=False)

    op.create_table(
        "role_addresses_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column(
            "role_type",
            sa.Enum(
                "applicant",
                "completing_party",
                "custodian",
                "director",
                "incorporator",
                "liquidator",
                "proprietor",
                "partner",
                name="roletypes",
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("role_addresses_history", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_role_addresses_history_change_filing_id"), ["change_filing_id"], unique=False
        )

    op.create_table(
        "share_classes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=1000), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("max_share_flag", sa.Boolean(), nullable=True),
        sa.Column("max_shares", sa.Integer(), nullable=True),
        sa.Column("par_value_flag", sa.Boolean(), nullable=True),
        sa.Column("par_value", sa.Float(), nullable=True),
        sa.Column("currency", sa.String(length=10), nullable=True),
        sa.Column("special_rights_flag", sa.Boolean(), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("change_filing_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("share_classes", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_share_classes_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_share_classes_name"), ["name"], unique=False)

    op.create_table(
        "share_classes_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("priority", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("max_share_flag", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("max_shares", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("par_value_flag", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("par_value", sa.Float(), autoincrement=False, nullable=True),
        sa.Column("currency", sa.String(length=10), autoincrement=False, nullable=True),
        sa.Column("special_rights_flag", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("share_classes_history", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_share_classes_history_change_filing_id"), ["change_filing_id"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_share_classes_history_name"), ["name"], unique=False)

    op.create_table(
        "dc_issued_credentials",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("dc_definition_id", sa.Integer(), nullable=True),
        sa.Column("dc_connection_id", sa.Integer(), nullable=True),
        sa.Column("credential_exchange_id", sa.String(length=100), nullable=True),
        sa.Column("credential_id", sa.String(length=10), nullable=True),
        sa.Column("is_issued", sa.Boolean(), nullable=True),
        sa.Column("date_of_issue", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_revoked", sa.Boolean(), nullable=True),
        sa.Column("credential_revocation_id", sa.String(length=10), nullable=True),
        sa.Column("revocation_registry_id", sa.String(length=200), nullable=True),
        sa.ForeignKeyConstraint(
            ["dc_connection_id"],
            ["dc_connections.id"],
        ),
        sa.ForeignKeyConstraint(
            ["dc_definition_id"],
            ["dc_definitions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_table(
        "dc_issued_business_user_credentials",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),  # Allow null values
        sa.Column("alternate_name_id", sa.Integer(), nullable=True),  # Allow null values
        sa.ForeignKeyConstraint(["legal_entity_id"], ["legal_entities.id"]),
        sa.ForeignKeyConstraint(["alternate_name_id"], ["alternate_names.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"]),
        sa.PrimaryKeyConstraint("id"),
    )

    # Add a check constraint to ensure at least one of legal_entity_id or alternate_name_id is non-null
    op.execute(
        "ALTER TABLE dc_issued_business_user_credentials ADD CONSTRAINT at_least_one_non_null CHECK (legal_entity_id IS NOT NULL OR alternate_name_id IS NOT NULL)"
    )

    op.create_table(
        "entity_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "role_type",
            sa.Enum(
                "applicant",
                "completing_party",
                "custodian",
                "director",
                "incorporator",
                "liquidator",
                "proprietor",
                "partner",
                name="roletypes",
            ),
            nullable=False,
        ),
        sa.Column("appointment_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("cessation_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("related_entity_id", sa.Integer(), nullable=True),
        sa.Column("related_colin_entity_id", sa.Integer(), nullable=True),
        sa.Column("filing_id", sa.Integer(), nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_colin_entity_id"],
            ["colin_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_entity_id"],
            ["legal_entities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "entity_roles_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column(
            "role_type",
            sa.Enum(
                "applicant",
                "completing_party",
                "custodian",
                "director",
                "incorporator",
                "liquidator",
                "proprietor",
                "partner",
                name="roletypes",
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("appointment_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("cessation_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("related_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("related_colin_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("delivery_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("mailing_address_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["delivery_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["mailing_address_id"],
            ["addresses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_colin_entity_id"],
            ["colin_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["related_entity_id"],
            ["legal_entities.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "party_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("role", sa.String(length=30), nullable=True),
        sa.Column("appointment_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("cessation_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("filing_id", sa.Integer(), nullable=True),
        sa.Column("party_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["party_id"],
            ["parties.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "party_roles_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("role", sa.String(length=30), autoincrement=False, nullable=True),
        sa.Column("appointment_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("cessation_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("party_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["party_id"],
            ["parties.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    op.create_table(
        "resolutions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("resolution_date", sa.Date(), nullable=False),
        sa.Column("type", sa.String(length=20), nullable=False),
        sa.Column("sub_type", sa.String(length=20), nullable=True),
        sa.Column("signing_date", sa.Date(), nullable=True),
        sa.Column("resolution", sa.Text(), nullable=True),
        sa.Column("change_filing_id", sa.Integer(), nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("signing_party_id", sa.Integer(), nullable=True),
        sa.Column("signing_legal_entity_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["signing_legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["signing_party_id"],
            ["parties.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("resolutions", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_resolutions_change_filing_id"), ["change_filing_id"], unique=False)

    op.create_table(
        "resolutions_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("resolution_date", sa.Date(), autoincrement=False, nullable=False),
        sa.Column("type", sa.String(length=20), autoincrement=False, nullable=False),
        sa.Column("sub_type", sa.String(length=20), autoincrement=False, nullable=True),
        sa.Column("signing_date", sa.Date(), autoincrement=False, nullable=True),
        sa.Column("resolution", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("signing_party_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("signing_legal_entity_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["signing_legal_entity_id"],
            ["legal_entities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["signing_party_id"],
            ["parties.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("resolutions_history", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_resolutions_history_change_filing_id"), ["change_filing_id"], unique=False)

    op.create_table(
        "share_series",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=1000), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("max_share_flag", sa.Boolean(), nullable=True),
        sa.Column("max_shares", sa.Integer(), nullable=True),
        sa.Column("special_rights_flag", sa.Boolean(), nullable=True),
        sa.Column("change_filing_id", sa.Integer(), nullable=True),
        sa.Column("share_class_id", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["share_class_id"],
            ["share_classes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("share_series", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_share_series_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_share_series_name"), ["name"], unique=False)

    op.create_table(
        "share_series_history",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(length=1000), autoincrement=False, nullable=True),
        sa.Column("priority", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("max_share_flag", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("max_shares", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("special_rights_flag", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("change_filing_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("share_class_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("version", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("changed", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["change_filing_id"],
            ["filings.id"],
        ),
        sa.ForeignKeyConstraint(
            ["share_class_id"],
            ["share_classes.id"],
        ),
        sa.PrimaryKeyConstraint("id", "version"),
        sqlite_autoincrement=True,
    )
    with op.batch_alter_table("share_series_history", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_share_series_history_change_filing_id"), ["change_filing_id"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_share_series_history_name"), ["name"], unique=False)

    with op.batch_alter_table("filings", schema=None) as batch_op:
        batch_op.add_column(sa.Column("completion_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("filing_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("filing_type", sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column("filing_sub_type", sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column("filing_json", postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column("meta_data", postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column("payment_status_code", sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column("payment_id", sa.String(length=4096), nullable=True))
        batch_op.add_column(sa.Column("payment_completion_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("status", sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column("source", sa.String(length=15), nullable=True))
        batch_op.add_column(sa.Column("paper_only", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("colin_only", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("payment_account", sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column("effective_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("submitter_roles", sa.String(length=200), nullable=True))
        batch_op.add_column(sa.Column("tech_correction_json", postgresql.JSONB(astext_type=sa.Text()), nullable=True))
        batch_op.add_column(sa.Column("court_order_file_number", sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column("court_order_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("court_order_effect_of_order", sa.String(length=500), nullable=True))
        batch_op.add_column(sa.Column("order_details", sa.String(length=2000), nullable=True))
        batch_op.add_column(sa.Column("deletion_locked", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("approval_type", sa.String(length=15), nullable=True))
        batch_op.add_column(sa.Column("application_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("notice_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("transaction_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("legal_entity_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("alternate_name_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("temp_reg", sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column("submitter_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("parent_filing_id", sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, "users", ["submitter_id"], ["id"])
        batch_op.create_foreign_key(None, "registration_bootstrap", ["temp_reg"], ["identifier"])
        batch_op.create_foreign_key(None, "filings", ["parent_filing_id"], ["id"])
        batch_op.create_foreign_key(None, "legal_entities", ["legal_entity_id"], ["id"])
        batch_op.create_foreign_key(None, "alternate_names", ["alternate_name_id"], ["id"])

    with op.batch_alter_table("legal_entities", schema=None) as batch_op:
        batch_op.add_column(sa.Column("last_modified", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("last_ledger_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("last_remote_ledger_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("last_ledger_timestamp", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("last_ar_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("last_agm_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("last_coa_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("last_cod_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("legal_name", sa.String(length=1000), nullable=True))
        batch_op.add_column(sa.Column("entity_type", sa.String(length=15), nullable=True))
        batch_op.add_column(sa.Column("founding_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("start_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("restoration_expiry_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("dissolution_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("cco_expiry_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("continuation_out_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("identifier", sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column("tax_id", sa.String(length=15), nullable=True))
        batch_op.add_column(sa.Column("fiscal_year_end_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("restriction_ind", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("last_ar_year", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("last_ar_reminder_year", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("association_type", sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column("state", sa.Enum("ACTIVE", "HISTORICAL", name="state"), nullable=True))
        batch_op.add_column(sa.Column("state_filing_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("admin_freeze", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("submitter_userid", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("send_ar_ind", sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column("bn9", sa.String(length=9), nullable=True))
        batch_op.add_column(sa.Column("first_name", sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column("middle_initial", sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column("last_name", sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column("additional_name", sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column("title", sa.String(length=1000), nullable=True))
        batch_op.add_column(sa.Column("email", sa.String(length=254), nullable=True))
        batch_op.add_column(sa.Column("delivery_address_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("mailing_address_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("naics_key", sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column("naics_code", sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column("naics_description", sa.String(length=300), nullable=True))
        batch_op.add_column(sa.Column("foreign_jurisdiction", sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column("foreign_jurisdiction_region", sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column("foreign_identifier", sa.String(length=15), nullable=True))
        batch_op.add_column(sa.Column("foreign_legal_name", sa.String(length=1000), nullable=True))
        batch_op.add_column(sa.Column("foreign_legal_type", sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column("foreign_incorporation_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("version", sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f("ix_legal_entities_entity_type"), ["entity_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_first_name"), ["first_name"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_identifier"), ["identifier"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_legal_name"), ["legal_name"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_middle_initial"), ["middle_initial"], unique=False)
        batch_op.create_index(batch_op.f("ix_legal_entities_tax_id"), ["tax_id"], unique=False)
        batch_op.create_foreign_key(None, "addresses", ["mailing_address_id"], ["id"])
        batch_op.create_foreign_key(None, "users", ["submitter_userid"], ["id"])
        batch_op.create_foreign_key(None, "addresses", ["delivery_address_id"], ["id"])
        batch_op.create_foreign_key(None, "filings", ["state_filing_id"], ["id"])

    with op.batch_alter_table("alternate_names", schema=None) as batch_op:
        batch_op.add_column(sa.Column("identifier", sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column("name_type", sa.Enum("DBA", "TRANSLATION", name="nametype"), nullable=False))
        batch_op.add_column(sa.Column("name", sa.String(length=1000), nullable=False))
        batch_op.add_column(sa.Column("bn15", sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column("start_date", sa.DateTime(timezone=True), nullable=False))
        batch_op.add_column(sa.Column("end_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(
            sa.Column("business_start_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("dissolution_date", sa.DateTime(timezone=True), autoincrement=False, nullable=True)
        )
        batch_op.add_column(
            sa.Column("state", sa.Enum("ACTIVE", "HISTORICAL", name="state"), autoincrement=False, nullable=True)
        )
        batch_op.add_column(sa.Column("state_filing_id", sa.Integer(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("admin_freeze", sa.Boolean(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("last_modified", sa.DateTime(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("legal_entity_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("entity_type", sa.String(length=15), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("colin_entity_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("change_filing_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("email", sa.String(length=254), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("delivery_address_id", sa.Integer(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("mailing_address_id", sa.Integer(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("naics_key", sa.String(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("naics_code", sa.String(length=10), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("naics_description", sa.String(length=300), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column("version", sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, "addresses", ["delivery_address_id"], ["id"])
        batch_op.create_foreign_key(None, "addresses", ["mailing_address_id"], ["id"])
        batch_op.create_foreign_key(None, "filings", ["change_filing_id"], ["id"])
        batch_op.create_foreign_key(None, "legal_entities", ["legal_entity_id"], ["id"])
        batch_op.create_foreign_key(None, "colin_entities", ["colin_entity_id"], ["id"])
        batch_op.create_foreign_key(None, "filings", ["state_filing_id"], ["id"])
        batch_op.create_index(batch_op.f("ix_alternate_names_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_alternate_names_name"), ["name"], unique=False)
        batch_op.create_index(batch_op.f("ix_alternate_names_identifier"), ["identifier"], unique=False)
        batch_op.create_index(batch_op.f("ix_alternate_names_entity_type"), ["entity_type"], unique=False)

    with op.batch_alter_table("offices", schema=None) as batch_op:
        batch_op.add_column(sa.Column("office_type", sa.String(length=75), nullable=True))
        batch_op.add_column(sa.Column("deactivated_date", sa.DateTime(timezone=True), nullable=True))
        batch_op.add_column(sa.Column("change_filing_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("legal_entity_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("alternate_name_id", sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column("version", sa.Integer(), nullable=False))
        batch_op.create_index(batch_op.f("ix_offices_change_filing_id"), ["change_filing_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_offices_legal_entity_id"), ["legal_entity_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_offices_alternate_name_id"), ["alternate_name_id"], unique=False)
        batch_op.create_foreign_key(None, "filings", ["change_filing_id"], ["id"])
        batch_op.create_foreign_key(None, "office_types", ["office_type"], ["identifier"])
        batch_op.create_foreign_key(None, "legal_entities", ["legal_entity_id"], ["id"])
        batch_op.create_foreign_key(None, "alternate_names", ["alternate_name_id"], ["id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("offices", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_index(batch_op.f("ix_offices_legal_entity_id"))
        batch_op.drop_index(batch_op.f("ix_offices_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_offices_alternate_name_id"))
        batch_op.drop_column("version")
        batch_op.drop_column("legal_entity_id")
        batch_op.drop_column("change_filing_id")
        batch_op.drop_column("alternate_name_id")
        batch_op.drop_column("deactivated_date")
        batch_op.drop_column("office_type")

    with op.batch_alter_table("legal_entities", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_index(batch_op.f("ix_legal_entities_tax_id"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_middle_initial"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_legal_name"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_identifier"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_first_name"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_entity_type"))
        batch_op.drop_column("version")
        batch_op.drop_column("foreign_incorporation_date")
        batch_op.drop_column("foreign_legal_type")
        batch_op.drop_column("foreign_legal_name")
        batch_op.drop_column("foreign_identifier")
        batch_op.drop_column("foreign_jurisdiction_region")
        batch_op.drop_column("foreign_jurisdiction")
        batch_op.drop_column("naics_description")
        batch_op.drop_column("naics_code")
        batch_op.drop_column("naics_key")
        batch_op.drop_column("mailing_address_id")
        batch_op.drop_column("delivery_address_id")
        batch_op.drop_column("email")
        batch_op.drop_column("title")
        batch_op.drop_column("additional_name")
        batch_op.drop_column("last_name")
        batch_op.drop_column("middle_initial")
        batch_op.drop_column("first_name")
        batch_op.drop_column("bn9")
        batch_op.drop_column("send_ar_ind")
        batch_op.drop_column("submitter_userid")
        batch_op.drop_column("admin_freeze")
        batch_op.drop_column("state_filing_id")
        batch_op.drop_column("state")
        batch_op.drop_column("association_type")
        batch_op.drop_column("last_ar_reminder_year")
        batch_op.drop_column("last_ar_year")
        batch_op.drop_column("restriction_ind")
        batch_op.drop_column("fiscal_year_end_date")
        batch_op.drop_column("tax_id")
        batch_op.drop_column("identifier")
        batch_op.drop_column("continuation_out_date")
        batch_op.drop_column("cco_expiry_date")
        batch_op.drop_column("dissolution_date")
        batch_op.drop_column("restoration_expiry_date")
        batch_op.drop_column("start_date")
        batch_op.drop_column("founding_date")
        batch_op.drop_column("entity_type")
        batch_op.drop_column("legal_name")
        batch_op.drop_column("last_cod_date")
        batch_op.drop_column("last_coa_date")
        batch_op.drop_column("last_agm_date")
        batch_op.drop_column("last_ar_date")
        batch_op.drop_column("last_ledger_timestamp")
        batch_op.drop_column("last_remote_ledger_id")
        batch_op.drop_column("last_ledger_id")
        batch_op.drop_column("last_modified")

    with op.batch_alter_table("alternate_names", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_index(batch_op.f("ix_alternate_names_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_name"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_identifier"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_entity_type"))
        batch_op.drop_column("identifier")
        batch_op.drop_column("name_type")
        batch_op.drop_column("name")
        batch_op.drop_column("bn15")
        batch_op.drop_column("start_date")
        batch_op.drop_column("end_date")
        batch_op.drop_column("business_start_date")
        batch_op.drop_column("dissolution_date")
        batch_op.drop_column("state")
        batch_op.drop_column("state_filing_id")
        batch_op.drop_column("admin_freeze")
        batch_op.drop_column("last_modified")
        batch_op.drop_column("legal_entity_id")
        batch_op.drop_column("entity_type")
        batch_op.drop_column("colin_entity_id")
        batch_op.drop_column("change_filing_id")
        batch_op.drop_column("email")
        batch_op.drop_column("delivery_address_id")
        batch_op.drop_column("mailing_address_id")
        batch_op.drop_column("naics_key")
        batch_op.drop_column("naics_code")
        batch_op.drop_column("naics_description")
        batch_op.drop_column("version")

    with op.batch_alter_table("filings", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_column("parent_filing_id")
        batch_op.drop_column("submitter_id")
        batch_op.drop_column("temp_reg")
        batch_op.drop_column("legal_entity_id")
        batch_op.drop_column("alternate_name_id")
        batch_op.drop_column("transaction_id")
        batch_op.drop_column("notice_date")
        batch_op.drop_column("application_date")
        batch_op.drop_column("approval_type")
        batch_op.drop_column("deletion_locked")
        batch_op.drop_column("order_details")
        batch_op.drop_column("court_order_effect_of_order")
        batch_op.drop_column("court_order_date")
        batch_op.drop_column("court_order_file_number")
        batch_op.drop_column("tech_correction_json")
        batch_op.drop_column("submitter_roles")
        batch_op.drop_column("effective_date")
        batch_op.drop_column("payment_account")
        batch_op.drop_column("colin_only")
        batch_op.drop_column("paper_only")
        batch_op.drop_column("source")
        batch_op.drop_column("status")
        batch_op.drop_column("payment_completion_date")
        batch_op.drop_column("payment_id")
        batch_op.drop_column("payment_status_code")
        batch_op.drop_column("meta_data")
        batch_op.drop_column("filing_json")
        batch_op.drop_column("filing_sub_type")
        batch_op.drop_column("filing_type")
        batch_op.drop_column("filing_date")
        batch_op.drop_column("completion_date")

    with op.batch_alter_table("share_series_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_share_series_history_name"))
        batch_op.drop_index(batch_op.f("ix_share_series_history_change_filing_id"))

    op.drop_table("share_series_history")
    with op.batch_alter_table("share_series", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_share_series_name"))
        batch_op.drop_index(batch_op.f("ix_share_series_change_filing_id"))

    op.drop_table("share_series")
    with op.batch_alter_table("resolutions_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_resolutions_history_change_filing_id"))

    op.drop_table("resolutions_history")
    with op.batch_alter_table("resolutions", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_resolutions_change_filing_id"))

    op.drop_table("resolutions")
    op.drop_table("party_roles_history")
    op.drop_table("party_roles")
    op.drop_table("entity_roles_history")
    op.drop_table("entity_roles")
    op.drop_table("dc_issued_credentials")
    op.drop_table("dc_issued_business_user_credentials")
    with op.batch_alter_table("share_classes_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_share_classes_history_name"))
        batch_op.drop_index(batch_op.f("ix_share_classes_history_change_filing_id"))

    op.drop_table("share_classes_history")
    with op.batch_alter_table("share_classes", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_share_classes_name"))
        batch_op.drop_index(batch_op.f("ix_share_classes_change_filing_id"))

    op.drop_table("share_classes")
    with op.batch_alter_table("role_addresses_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_role_addresses_history_change_filing_id"))

    op.drop_table("role_addresses_history")
    with op.batch_alter_table("role_addresses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_role_addresses_change_filing_id"))

    op.drop_table("role_addresses")
    with op.batch_alter_table("request_tracker", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_request_tracker_legal_entity_id"))
        batch_op.drop_index(batch_op.f("ix_request_tracker_alternate_name_id"))
        batch_op.drop_index(batch_op.f("ix_request_tracker_filing_id"))

    op.drop_table("request_tracker")
    with op.batch_alter_table("parties_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_parties_history_middle_initial"))
        batch_op.drop_index(batch_op.f("ix_parties_history_first_name"))
        batch_op.drop_index(batch_op.f("ix_parties_history_change_filing_id"))

    op.drop_table("parties_history")
    with op.batch_alter_table("parties", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_parties_middle_initial"))
        batch_op.drop_index(batch_op.f("ix_parties_first_name"))
        batch_op.drop_index(batch_op.f("ix_parties_change_filing_id"))

    op.drop_table("parties")
    with op.batch_alter_table("offices_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_offices_history_legal_entity_id"))
        batch_op.drop_index(batch_op.f("ix_offices_history_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_offices_history_alternate_name_id"))

    op.drop_table("offices_history")
    with op.batch_alter_table("naics_elements", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_naics_elements_year"))
        batch_op.drop_index(batch_op.f("ix_naics_elements_version"))
        batch_op.drop_index(batch_op.f("ix_naics_elements_naics_structure_id"))
        batch_op.drop_index(batch_op.f("ix_naics_elements_level"))
        batch_op.drop_index(batch_op.f("ix_naics_elements_element_type"))
        batch_op.drop_index(batch_op.f("ix_naics_elements_element_description"))
        batch_op.drop_index(batch_op.f("ix_naics_elements_code"))
        batch_op.drop_index(batch_op.f("ix_naics_elements_class_title"))

    op.drop_table("naics_elements")
    with op.batch_alter_table("legal_entities_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_legal_entities_history_tax_id"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_history_middle_initial"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_history_legal_name"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_history_identifier"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_history_first_name"))
        batch_op.drop_index(batch_op.f("ix_legal_entities_history_entity_type"))

    op.drop_table("legal_entities_history")
    with op.batch_alter_table("documents_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_documents_history_legal_entity_id"))
        batch_op.drop_index(batch_op.f("ix_documents_history_filing_id"))

    op.drop_table("documents_history")
    with op.batch_alter_table("documents", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_documents_legal_entity_id"))
        batch_op.drop_index(batch_op.f("ix_documents_filing_id"))

    op.drop_table("documents")
    op.drop_table("dc_connections")
    with op.batch_alter_table("comments", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_comments_staff_id"))
        batch_op.drop_index(batch_op.f("ix_comments_legal_entity_id"))
        batch_op.drop_index(batch_op.f("ix_comments_alternate_name_id"))
        batch_op.drop_index(batch_op.f("ix_comments_filing_id"))

    op.drop_table("comments")
    op.drop_table("colin_event_ids")
    with op.batch_alter_table("colin_entities_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_colin_entities_history_organization_name"))
        batch_op.drop_index(batch_op.f("ix_colin_entities_history_identifier"))
        batch_op.drop_index(batch_op.f("ix_colin_entities_history_email"))
        batch_op.drop_index(batch_op.f("ix_colin_entities_history_change_filing_id"))

    op.drop_table("colin_entities_history")
    with op.batch_alter_table("colin_entities", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_colin_entities_organization_name"))
        batch_op.drop_index(batch_op.f("ix_colin_entities_identifier"))
        batch_op.drop_index(batch_op.f("ix_colin_entities_email"))
        batch_op.drop_index(batch_op.f("ix_colin_entities_change_filing_id"))

    op.drop_table("colin_entities")
    with op.batch_alter_table("alternate_names_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_alternate_names_history_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_history_name"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_history_identifier"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_history_entity_type"))

    op.drop_table("alternate_names_history")
    with op.batch_alter_table("alternate_names", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_alternate_names_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_name"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_identifier"))
        batch_op.drop_index(batch_op.f("ix_alternate_names_history_entity_type"))

    op.drop_table("alternate_names")
    with op.batch_alter_table("aliases_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_aliases_history_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_aliases_history_alias"))

    op.drop_table("aliases_history")
    with op.batch_alter_table("aliases", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_aliases_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_aliases_alias"))

    op.drop_table("aliases")
    with op.batch_alter_table("addresses_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_addresses_history_street"))
        batch_op.drop_index(batch_op.f("ix_addresses_history_legal_entity_id"))
        batch_op.drop_index(batch_op.f("ix_addresses_history_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_addresses_history_address_type"))
        batch_op.drop_index(batch_op.f("ix_addresses_history_alternate_name_id"))

    op.drop_table("addresses_history")
    with op.batch_alter_table("users_history", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_history_username"))
        batch_op.drop_index(batch_op.f("ix_users_history_idp_userid"))

    op.drop_table("users_history")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_username"))
        batch_op.drop_index(batch_op.f("ix_users_idp_userid"))

    op.drop_table("users")
    with op.batch_alter_table("registration_bootstrap", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_registration_bootstrap_account"))

    op.drop_table("registration_bootstrap")
    op.drop_table("office_types")
    with op.batch_alter_table("naics_structures", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_naics_structures_year"))
        batch_op.drop_index(batch_op.f("ix_naics_structures_version"))
        batch_op.drop_index(batch_op.f("ix_naics_structures_level"))
        batch_op.drop_index(batch_op.f("ix_naics_structures_code"))
        batch_op.drop_index(batch_op.f("ix_naics_structures_class_title"))
        batch_op.drop_index(batch_op.f("ix_naics_structures_class_definition"))

    op.drop_table("naics_structures")
    op.drop_table("dc_definitions")
    op.drop_table("corp_types_history")
    op.drop_table("corp_types")
    op.drop_table("colin_last_update")
    with op.batch_alter_table("addresses", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_addresses_street"))
        batch_op.drop_index(batch_op.f("ix_addresses_legal_entity_id"))
        batch_op.drop_index(batch_op.f("ix_addresses_change_filing_id"))
        batch_op.drop_index(batch_op.f("ix_addresses_address_type"))
        batch_op.drop_index(batch_op.f("ix_addresses_alternate_name_id"))

    op.drop_table("addresses")
    # ### end Alembic commands ###
