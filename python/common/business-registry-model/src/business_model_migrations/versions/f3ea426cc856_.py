"""empty message

Revision ID: f3ea426cc856
Revises: 
Create Date: 2025-03-18 11:33:26.872529

"""
from alembic import op
from sqlalchemy.sql import table, column
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f3ea426cc856'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('office_types',
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('identifier')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=1000), nullable=True),
    sa.Column('firstname', sa.String(length=1000), nullable=True),
    sa.Column('lastname', sa.String(length=1000), nullable=True),
    sa.Column('middlename', sa.String(length=1000), nullable=True),
    sa.Column('email', sa.String(length=1024), nullable=True),
    sa.Column('sub', sa.String(length=36), nullable=True),
    sa.Column('iss', sa.String(length=1024), nullable=True),
    sa.Column('idp_userid', sa.String(length=256), nullable=True),
    sa.Column('login_source', sa.String(length=200), nullable=True),
    sa.Column('creation_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sub'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_idp_userid'), ['idp_userid'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)

    op.create_table('users_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('username', sa.String(length=1000), autoincrement=False, nullable=True),
    sa.Column('firstname', sa.String(length=1000), autoincrement=False, nullable=True),
    sa.Column('lastname', sa.String(length=1000), autoincrement=False, nullable=True),
    sa.Column('middlename', sa.String(length=1000), autoincrement=False, nullable=True),
    sa.Column('email', sa.String(length=1024), autoincrement=False, nullable=True),
    sa.Column('sub', sa.String(length=36), autoincrement=False, nullable=True),
    sa.Column('iss', sa.String(length=1024), autoincrement=False, nullable=True),
    sa.Column('idp_userid', sa.String(length=256), autoincrement=False, nullable=True),
    sa.Column('login_source', sa.String(length=200), autoincrement=False, nullable=True),
    sa.Column('creation_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('users_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_history_idp_userid'), ['idp_userid'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_history_username'), ['username'], unique=False)

    op.create_table('businesses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_ledger_id', sa.Integer(), nullable=True),
    sa.Column('last_remote_ledger_id', sa.Integer(), nullable=True),
    sa.Column('last_ledger_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_ar_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_agm_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_coa_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_cod_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('legal_name', sa.String(length=1000), nullable=True),
    sa.Column('legal_type', sa.String(length=10), nullable=True),
    sa.Column('founding_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('restoration_expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('dissolution_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('continuation_out_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('identifier', sa.String(length=10), nullable=True),
    sa.Column('tax_id', sa.String(length=15), nullable=True),
    sa.Column('fiscal_year_end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('restriction_ind', sa.Boolean(), nullable=True),
    sa.Column('last_ar_year', sa.Integer(), nullable=True),
    sa.Column('last_ar_reminder_year', sa.Integer(), nullable=True),
    sa.Column('last_tr_year', sa.Integer(), nullable=True),
    sa.Column('association_type', sa.String(length=50), nullable=True),
    sa.Column('state', sa.Enum('ACTIVE', 'HISTORICAL', 'LIQUIDATION', name='state'), nullable=True),
    sa.Column('state_filing_id', sa.Integer(), nullable=True),
    sa.Column('admin_freeze', sa.Boolean(), nullable=True),
    sa.Column('submitter_userid', sa.Integer(), nullable=True),
    sa.Column('send_ar_ind', sa.Boolean(), nullable=True),
    sa.Column('no_dissolution', sa.Boolean(), nullable=True),
    sa.Column('naics_key', sa.String(length=50), nullable=True),
    sa.Column('naics_code', sa.String(length=10), nullable=True),
    sa.Column('naics_description', sa.String(length=150), nullable=True),
    sa.Column('foreign_jurisdiction', sa.String(length=10), nullable=True),
    sa.Column('foreign_jurisdiction_region', sa.String(length=10), nullable=True),
    sa.Column('foreign_legal_name', sa.String(length=1000), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['submitter_userid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('businesses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_businesses_identifier'), ['identifier'], unique=False)
        batch_op.create_index(batch_op.f('ix_businesses_legal_name'), ['legal_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_businesses_tax_id'), ['tax_id'], unique=False)

    op.create_table('businesses_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_ledger_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('last_remote_ledger_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('last_ledger_timestamp', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_ar_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_agm_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_coa_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('last_cod_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('legal_name', sa.String(length=1000), autoincrement=False, nullable=True),
    sa.Column('legal_type', sa.String(length=10), autoincrement=False, nullable=True),
    sa.Column('founding_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('restoration_expiry_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('dissolution_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('continuation_out_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('identifier', sa.String(length=10), autoincrement=False, nullable=True),
    sa.Column('tax_id', sa.String(length=15), autoincrement=False, nullable=True),
    sa.Column('fiscal_year_end_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('restriction_ind', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('last_ar_year', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('last_ar_reminder_year', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('last_tr_year', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('association_type', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('state', sa.Enum('ACTIVE', 'HISTORICAL', 'LIQUIDATION', name='state'), autoincrement=False, nullable=True),
    sa.Column('state_filing_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('admin_freeze', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('submitter_userid', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('send_ar_ind', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('no_dissolution', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('naics_key', sa.String(length=50), autoincrement=False, nullable=True),
    sa.Column('naics_code', sa.String(length=10), autoincrement=False, nullable=True),
    sa.Column('naics_description', sa.String(length=150), autoincrement=False, nullable=True),
    sa.Column('foreign_jurisdiction', sa.String(length=10), autoincrement=False, nullable=True),
    sa.Column('foreign_jurisdiction_region', sa.String(length=10), autoincrement=False, nullable=True),
    sa.Column('foreign_legal_name', sa.String(length=1000), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['submitter_userid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('businesses_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_businesses_history_identifier'), ['identifier'], unique=False)
        batch_op.create_index(batch_op.f('ix_businesses_history_legal_name'), ['legal_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_businesses_history_tax_id'), ['tax_id'], unique=False)

    op.create_table('offices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('office_type', sa.String(length=75), nullable=True),
    sa.Column('business_id', sa.Integer(), nullable=True),
    sa.Column('deactivated_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['office_type'], ['office_types.identifier'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('offices', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_offices_business_id'), ['business_id'], unique=False)

    op.create_table('offices_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('office_type', sa.String(length=75), autoincrement=False, nullable=True),
    sa.Column('business_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('deactivated_date', sa.DateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['office_type'], ['office_types.identifier'], ),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('offices_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_offices_history_business_id'), ['business_id'], unique=False)

    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address_type', sa.String(length=4096), nullable=True),
    sa.Column('street', sa.String(length=4096), nullable=True),
    sa.Column('street_additional', sa.String(length=4096), nullable=True),
    sa.Column('city', sa.String(length=4096), nullable=True),
    sa.Column('region', sa.String(length=4096), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('postal_code', sa.String(length=15), nullable=True),
    sa.Column('delivery_instructions', sa.String(length=4096), nullable=True),
    sa.Column('business_id', sa.Integer(), nullable=True),
    sa.Column('office_id', sa.Integer(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_addresses_address_type'), ['address_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_business_id'), ['business_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_street'), ['street'], unique=False)

    op.create_table('addresses_history',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('address_type', sa.String(length=4096), autoincrement=False, nullable=True),
    sa.Column('street', sa.String(length=4096), autoincrement=False, nullable=True),
    sa.Column('street_additional', sa.String(length=4096), autoincrement=False, nullable=True),
    sa.Column('city', sa.String(length=4096), autoincrement=False, nullable=True),
    sa.Column('region', sa.String(length=4096), autoincrement=False, nullable=True),
    sa.Column('country', sa.String(length=2), autoincrement=False, nullable=True),
    sa.Column('postal_code', sa.String(length=15), autoincrement=False, nullable=True),
    sa.Column('delivery_instructions', sa.String(length=4096), autoincrement=False, nullable=True),
    sa.Column('business_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('office_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('version', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('changed', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'version'),
    sqlite_autoincrement=True
    )
    with op.batch_alter_table('addresses_history', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_addresses_history_address_type'), ['address_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_history_business_id'), ['business_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_addresses_history_street'), ['street'], unique=False)

    office_types_table = table(
        "office_types",
        column("identifier", sa.String),
        column("description", sa.String),
    )
    op.bulk_insert(
        office_types_table,
        [
            {"identifier": "registeredOffice", "description": "Registered Office"},
            {"identifier": "recordsOffice", "description": "Records Office"},
            {"identifier": "custodialOffice", "description": "Custodial Office"},
            {"identifier": "businessOffice", "description": "Business Office"},
        ],
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('addresses_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_addresses_history_street'))
        batch_op.drop_index(batch_op.f('ix_addresses_history_business_id'))
        batch_op.drop_index(batch_op.f('ix_addresses_history_address_type'))

    op.drop_table('addresses_history')
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_addresses_street'))
        batch_op.drop_index(batch_op.f('ix_addresses_business_id'))
        batch_op.drop_index(batch_op.f('ix_addresses_address_type'))

    op.drop_table('addresses')
    with op.batch_alter_table('offices_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_offices_history_business_id'))

    op.drop_table('offices_history')
    with op.batch_alter_table('offices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_offices_business_id'))

    op.drop_table('offices')
    with op.batch_alter_table('businesses_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_businesses_history_tax_id'))
        batch_op.drop_index(batch_op.f('ix_businesses_history_legal_name'))
        batch_op.drop_index(batch_op.f('ix_businesses_history_identifier'))

    op.drop_table('businesses_history')
    with op.batch_alter_table('businesses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_businesses_tax_id'))
        batch_op.drop_index(batch_op.f('ix_businesses_legal_name'))
        batch_op.drop_index(batch_op.f('ix_businesses_identifier'))

    op.drop_table('businesses')
    with op.batch_alter_table('users_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_history_username'))
        batch_op.drop_index(batch_op.f('ix_users_history_idp_userid'))

    op.drop_table('users_history')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_idp_userid'))

    op.drop_table('users')
    op.drop_table('office_types')
    # ### end Alembic commands ###
