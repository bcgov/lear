{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "description": "Deployment template for a legal api service.",
            "tags": "${COMP_NAME}"
        },
        "name": "${COMP_NAME}-deploy-template"
    },
    "objects": [{
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${COMP_NAME}-${SUFFIX}",
                "labels": {
                    "app": "${APP_NAME}-${SUFFIX}",
                    "app-group": "${APP_NAME}-${SUFFIX}",
                    "group": "${APP_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%",
                        "pre": {
                            "failurePolicy": "Abort",
                            "execNewPod": {
                                "command": [
                                    "/opt/app-root/src/pre-hook-update-db.sh"
                                ],
                                "env": [{
                                        "name": "DB_ADMIN_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "postgresql-${SECRET_SRC}",
                                                "key": "admin-password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATABASE_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "name": "postgresql-${SECRET_SRC}",
                                                "key": "database-user"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATABASE_PASSWORD",
                                        "valueFrom": {
                                            "qqq": {
                                                "name": "postgresql-${SECRET_SRC}",
                                                "key": "database-password"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATABASE_NAME",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${COMP_NAME}-${SUFFIX}-config",
                                                "key": "DATABASE_NAME"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATABASE_HOST",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${COMP_NAME}-${SUFFIX}-config",
                                                "key": "DATABASE_HOST"
                                            }
                                        }
                                    },
                                    {
                                        "name": "DATABASE_PORT",
                                        "valueFrom": {
                                            "configMapKeyRef": {
                                                "name": "${COMP_NAME}-${SUFFIX}-config",
                                                "key": "DB_PORT"
                                            }
                                        }
                                    }
                                ],
                                "containerName": "${COMP_NAME}"
                            }
                        }
                    }
                },
                "triggers": [{
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": ["{$COMP_NAME}"],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${COMP_NAME}:${SUFFIX}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": "${REPLICAS}",
                "test": false,
                "selector": {
                    "app": "${COMP_NAME}-${SUFFIX}",
                    "deploymentconfig": "${COMP_NAME}-${SUFFIX}"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "${COMP_NAME}-${SUFFIX}",
                            "deploymentconfig": "${COMP_NAME}-${SUFFIX}"
                        }
                    },
                    "spec": {
                        "containers": [{
                            "name": "${COMP_NAME}",
                            "image": "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${COMP_NAME}:${SUFFIX}",
                            "ports": [{
                                "containerPort": 8080,
                                "protocol": "TCP"
                            }],
                            "env": [{
                                    "name": "POD_NAMESPACE",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_USERNAME",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "postgresql-${SECRET_SRC}",
                                            "key": "database-user"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_PASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "name": "postgresql-${SECRET_SRC}",
                                            "key": "database-password"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_NAME",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "${COMP_NAME}-${SUFFIX}-config",
                                            "key": "DATABASE_NAME"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_HOST",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "${COMP_NAME}-${SUFFIX}-config",
                                            "key": "DATABASE_HOST"
                                        }
                                    }
                                },
                                {
                                    "name": "DB_PORT",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "${COMP_NAME}-${SUFFIX}-config",
                                            "key": "DB_PORT"
                                        }
                                    }
                                },
                                {
                                    "name": "GO_LIVE_DATE",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "${COMP_NAME}-${SUFFIX}-config",
                                            "key": "GO_LIVE_DATE"
                                        }
                                    }
                                },
                                {
                                    "name": "SENTRY_DSN",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "name": "${COMP_NAME}-${SUFFIX}-config",
                                            "key": "SENTRY_DSN"
                                        }
                                    }
                                },
                                {
                                    "name": "PAYMENT_SVC_URL",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "PAYMENT_SVC_URL",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "AUTH_SVC_URL",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "AUTH_SVC_URL",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "REPORT_SVC_URL",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "REPORT_SVC_URL",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_TEST_NAME",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "DATABASE_TEST_NAME",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_TEST_HOST",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "DATABASE_TEST_HOST",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_TEST_USERNAME",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "key": "database-user",
                                            "name": "postgresql-${SECRET_SRC}"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_TEST_PASSWORD",
                                    "valueFrom": {
                                        "secretKeyRef": {
                                            "key": "database-password",
                                            "name": "postgresql-${SECRET_SRC}"
                                        }
                                    }
                                },
                                {
                                    "name": "DATABASE_TEST_PORT",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "DATABASE_TEST_PORT",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "JWT_OIDC_WELL_KNOWN_CONFIG",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "JWT_OIDC_WELL_KNOWN_CONFIG",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "JWT_OIDC_ALGORITHMS",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "JWT_OIDC_ALGORITHMS",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "JWT_OIDC_AUDIENCE",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "JWT_OIDC_AUDIENCE",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "JWT_OIDC_CLIENT_SECRET",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "JWT_OIDC_CLIENT_SECRET",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "JWT_OIDC_CACHING_ENABLED",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "JWT_OIDC_CACHING_ENABLED",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "JWT_OIDC_JWKS_CACHE_TIMEOUT",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "JWT_OIDC_JWKS_CACHE_TIMEOUT",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "NATS_SERVERS",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "NATS_SERVERS",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "NATS_CLIENT_NAME",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "NATS_CLIENT_NAME",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "NATS_CLUSTER_ID",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "NATS_CLUSTER_ID",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "NATS_SUBJECT",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "NATS_SUBJECT",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "NATS_QUEUE",
                                    "valueFrom": {
                                        "configMapKeyRef": {
                                            "key": "NATS_QUEUE",
                                            "name": "${COMP_NAME}-${SUFFIX}-config"
                                        }
                                    }
                                },
                                {
                                    "name": "POD_NAMESPACE",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "apiVersion": "v1",
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                }
                            ],
                            "resources": {
                                "limits": {
                                    "cpu": "${CPU_LIMIT}",
                                    "memory": "${MEMORY_LIMIT}"
                                },
                                "requests": {
                                    "cpu": "${CPU_REQUEST}",
                                    "memory": "${MEMORY_REQUEST}"
                                }
                            },
                            "livenessProbe": {
                                "httpGet": {
                                    "path": "/ops/healthz",
                                    "port": 8080,
                                    "scheme": "HTTP"
                                },
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/ops/readyz",
                                    "port": 8080,
                                    "scheme": "HTTP"
                                },
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "terminationMessagePath": "/dev/termination-log",
                            "terminationMessagePolicy": "File",
                            "imagePullPolicy": "Always"
                        }],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            }
        },
        {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "name": "${COMP_NAME}-${SUFFIX}-config",
                "labels": {
                    "app": "${APP_NAME}-${SUFFIX}",
                    "app-group": "${APP_NAME}-${SUFFIX}"
                }
            },
            "data": {
                "GO_LIVE_DATE": "${GO_LIVE_DATE}",
                "SENTRY_DSN": "${SENTRY_DSN}",
                "DATABASE_HOST": "postgresql-${SUFFIX}",
                "DATABASE_NAME": "${DATABASE_NAME}",
                "DB_PORT": "${DB_PORT}",
                "DATABASE_TEST_HOST": "postgresql-${SUFFIX}",
                "DATABASE_TEST_NAME": "${DATABASE_NAME}_testdb",
                "DATABASE_TEST_PASSWORD": "",
                "DATABASE_TEST_PORT": "${DB_PORT}",
                "DATABASE_TEST_USERNAME": "tester",
                "PAYMENT_SVC_URL": "${PAYMENT_SVC_URL}",
                "AUTH_SVC_URL": "${AUTH_SVC_URL}",
                "REPORT_SVC_URL": "${REPORT_SVC_URL}",
                "JWT_OIDC_ALGORITHMS": "${JWT_OIDC_ALGORITHMS}",
                "JWT_OIDC_AUDIENCE": "${JWT_OIDC_AUDIENCE}",
                "JWT_OIDC_CLIENT_SECRET": "${JWT_OIDC_CLIENT_SECRET}",
                "JWT_OIDC_WELL_KNOWN_CONFIG": "${JWT_OIDC_WELL_KNOWN_CONFIG}",
                "JWT_OIDC_JWKS_CACHE_TIMEOUT": "${JWT_OIDC_JWKS_CACHE_TIMEOUT}",
                "JWT_OIDC_CACHING_ENABLED": "${JWT_OIDC_CACHING_ENABLED}",
                "NATS_SERVERS": "${NATS_SERVERS}",
                "NATS_CLIENT_NAME": "${NATS_CLIENT_NAME}",
                "NATS_CLUSTER_ID": "${NATS_CLUSTER_ID}",
                "NATS_SUBJECT": "${NATS_SUBJECT}",
                "NATS_QUEUE": "${NATS_QUEUE}"
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "${COMP_NAME}-${SUFFIX}",
                "creationTimestamp": null,
                "labels": {
                    "app": "${APP_NAME}-${SUFFIX}",
                    "app-group": "${APP_NAME}-${SUFFIX}"
                }
            },
            "spec": {
                "ports": [{
                    "name": "8080-tcp",
                    "protocol": "TCP",
                    "port": 8080,
                    "targetPort": 8080
                }],
                "selector": {
                    "deploymentconfig": "${COMP_NAME}-${SUFFIX}"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "${COMP_NAME}-${SUFFIX}",
                "labels": {
                    "app": "${APP_NAME}-${SUFFIX}",
                    "app-group": "${APP_NAME}-${SUFFIX}"
                }
            },
            "spec": {
                "host": "${COMP_NAME}-${SUFFIX}.pathfinder.gov.bc.ca",
                "to": {
                    "kind": "Service",
                    "name": "${COMP_NAME}-${SUFFIX}",
                    "weight": 100
                },
                "port": {
                    "targetPort": "8080-tcp"
                },
                "tls": {
                    "termination": "edge"
                },
                "wildcardPolicy": "None"
            },
            "status": {
                "ingress": [{
                    "host": "${COMP_NAME}-${SUFFIX}.pathfinder.gov.bc.ca",
                    "routerName": "router",
                    "conditions": [{
                        "type": "Admitted",
                        "status": "True"
                    }],
                    "wildcardPolicy": "None"
                }]
            }
        },
       {
           "apiVersion": "autoscaling/v1",
           "kind": "HorizontalPodAutoscaler",
           "metadata": {
               "name": "${COMP_NAME}-${SUFFIX}",
               "labels": {
                   "name": "${COMP_NAME}-${SUFFIX}"
               }
           },
           "spec": {
               "maxReplicas": "${{REPLICA_MAX}}",
               "minReplicas": "${{REPLICA_MIN}}",
               "scaleTargetRef": {
                   "apiVersion": "v1",
                   "kind": "DeploymentConfig",
                   "name": "${COMP_NAME}-${SUFFIX}"
               },
               "targetCPUUtilizationPercentage": 95
           }
       }
    ],
    "parameters": [
        {
            "name": "APP_NAME",
            "displayName": "APP_NAME",
            "description": "The name of the application (grouped).",
            "required": true,
            "value": "bcros"
        }, {
            "name": "COMP_NAME",
            "displayName": "COMP_NAME",
            "description": "The name of the application component.",
            "required": true,
            "value": "coops-ui"
        }, {
            "name": "SUFFIX",
            "displayName": "Name",
            "description": "The name assigned to all of the frontend objects defined in this template.",
            "required": true
        },
        {
            "name": "DATABASE_NAME",
            "displayName": "Database Name",
            "description": "A valid database name used by the service.",
            "required": true,
            "value": "lear"
        },
        {
            "name": "GO_LIVE_DATE",
            "displayName": "Go Live Date",
            "description": "Go Live Date of the system, used for MVP for things such as blocking legacy filings.",
            "required": true,
            "value": "2019-08-12"
        },
        {
            "name": "SENTRY_DSN",
            "displayName": "Sentry Init URL",
            "description": "Sentry DSN URL to initialize the Sentry SDK",
            "required": true,
            "value": "https://account.sentry.ioo/project/id"
        },
        {
            "name": "DB_PORT",
            "displayName": "Database Port",
            "description": "A valid database port used by the service.",
            "required": true,
            "value": "5432"
        },
        {
            "name": "IMAGE_NAMESPACE",
            "displayName": "Image Namespace",
            "required": true,
            "description": "The namespace of the OpenShift project containing the imagestream for the application.",
            "value": "gl2uos-tools"
        },
        {
            "name": "CPU_REQUEST",
            "displayName": "Resources CPU Request",
            "description": "The resources CPU request (in cores) for this build.",
            "required": true,
            "value": "100m"
        },
        {
            "name": "CPU_LIMIT",
            "displayName": "Resources CPU Limit",
            "description": "The resources CPU limit (in cores) for this build.",
            "required": true,
            "value": "750m"
        },
        {
            "name": "MEMORY_REQUEST",
            "displayName": "Resources Memory Request",
            "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
            "required": true,
            "value": "100Mi"
        },
        {
            "name": "MEMORY_LIMIT",
            "displayName": "Resources Memory Limit",
            "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
            "required": true,
            "value": "4Gi"
        },
        {
            "name": "REPLICAS",
            "displayName": "The number of replicas to run",
            "description": "The number of replicas to run in this environment.",
            "required": true,
            "value": "1"
        },
        {
            "name": "JWT_OIDC_ALGORITHMS",
            "displayName": "JWT Algorithms",
            "description": "The supported JWT Algorithm.",
            "required": true,
            "value": "RS256"
        },
        {
            "name": "JWT_OIDC_AUDIENCE",
            "displayName": "JWT Audience",
            "description": "The JWT Audience to use.",
            "required": true,
            "value": "my_client"
        },
        {
            "name": "JWT_OIDC_CLIENT_SECRET",
            "displayName": "JWT Client Secret",
            "description": "The JWT Client Secret to use, provided by the OIDC server.",
            "required": true,
            "value": "my_shared_secret"
        },
        {
            "name": "JWT_OIDC_WELL_KNOWN_CONFIG",
            "displayName": "JWT .wellknown URI",
            "description": "The well known URI for the meta info from the OIDC server.",
            "required": true,
            "value": "https://fqdn.domain/auth/realms/REALM_NAME/.well-known/openid-configuration"
        },
        {
            "name": "JWT_OIDC_CACHING_ENABLED",
            "displayName": "Enable JWT Server Key Caching?",
            "description": "Set the JWT Server Key caching.",
            "required": true,
            "value": "True"
        },
        {
            "name": "JWT_OIDC_JWKS_CACHE_TIMEOUT",
            "displayName": "JWT Server Key Caching Duration",
            "description": "Set how long to cache the OIDC Server Key.",
            "required": true,
            "value": "300"
        },
        {
            "name": "PAYMENT_SVC_URL",
            "displayName": "Payment Services URL",
            "description": "The URL used to post invoice to the payment service.",
            "required": true,
            "value": "https://pay-api-dev.pathfinder.gov.bc.ca/api/v1/payments"
        },
        {
            "name": "AUTH_SVC_URL",
            "displayName": "Authorization Services URL",
            "description": "The URL used to authorizations.",
            "required": true,
            "value": "https://auth-api-dev.pathfinder.gov.bc.ca/api/v1/entities/{identifier}/authorizations"
        },
        {
            "name": "REPORT_SVC_URL",
            "displayName": "Report Services URL",
            "description": "The URL used to get PDF outputs.",
            "required": true,
            "value": "https://report-api-dev.pathfinder.gov.bc.ca/api/v1/reports"
        },
        {
            "name": "NATS_SERVERS",
            "displayName": "List of NATS Servers",
            "description": "The list of NATS Servers in the Cluster.",
            "required": true,
            "value": "nats://nats-streaming.hak2zo-dev.svc:4222"
        },
        {
            "name": "NATS_CLIENT_NAME",
            "displayName": "NATS Client Name",
            "description": "The name of this service connecting into NATS.",
            "required": true,
            "value": "entity.filing.payment.worker"
        },
        {
            "name": "NATS_CLUSTER_ID",
            "displayName": "Name of the NATS Cluster",
            "description": "Name of the NATS cluster being used.",
            "required": true,
            "value": "test-cluster"
        },
        {
            "name": "NATS_SUBJECT",
            "displayName": "Publish to NATS Subject",
            "description": "The subject this service is publishing to.",
            "required": true,
            "value": "entity.filing.payment"
        },
        {
            "name": "NATS_QUEUE",
            "displayName": "Queue being used",
            "description": "The Queue being used.",
            "required": true,
            "value": "filing-worker"
        }
    ]
}