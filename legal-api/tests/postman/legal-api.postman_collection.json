{
	"info": {
		"_postman_id": "c75dc154-2ecb-4590-852b-a2872c53a988",
		"name": "legal-api",
		"description": "version=0.70 - This is a Legal API description",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "setup",
			"item": [
				{
					"name": "Install Postman BDD Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// If the \"postman_bdd_path\" environment variable is set, then we'll use it.",
									"// Otherwise, we'll default to the published version",
									"if (!environment.postman_bdd_path) {",
									"    postman.setGlobalVariable('postman_bdd_path', 'http://bigstickcarpet.com/postman-bdd/dist/postman-bdd.min.js');",
									"}",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// \"install\" Postman BDD",
									"postman.setGlobalVariable('postmanBDD', responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cache-Control",
								"value": "no-cache"
							}
						],
						"url": "{{postman_bdd_path}}",
						"description": "This request downloads [Postman BDD](https://github.com/BigstickCarpet/postman-bdd) and then \"installs\" it by setting a global variable\n"
					},
					"response": []
				},
				{
					"name": "Install auth_token_script",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d682c68b-25da-42f8-a3c0-b524eaebdbac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "968eeea1-e843-4f57-94c5-3fa1db5e7a50",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"auth_token_script\", jsonData.data);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "authurl = pm.environment.get(\"authurl\");\nrealm = pm.environment.get(\"realm\");\nclientid = pm.environment.get(\"clientid\");\nuserid = pm.environment.get(\"userid\");\npassword = pm.environment.get(\"password\");\nclient_secret = pm.environment.get(\"client_secret\");\n\nconst echoPostRequest = {\n  url: authurl +'/auth/realms/' +realm + '/protocol/openid-connect/token',\n  method: 'POST',\n  header: 'Content-Type:application/x-www-form-urlencoded',\n  body: {\n    mode: 'raw',\n    raw: 'grant_type=password&client_id=' \n         +clientid \n         +'&username=' \n         +userid \n         +'&password='\n         +password\n         +'&client_secret='\n         +client_secret\n  }\n};\npm.sendRequest(echoPostRequest, function (err, res) {\n    if (err) { console.log(err); }\n    else{\n      var jsonData = res.json();\n      pm.environment.set(\"token\", jsonData.access_token);\n      pm.environment.set(\"refresh_token\", jsonData.refresh_token);\n      pm.environment.set(\"token_expires\", Date.now()+(jsonData.expires_in * 1000));\n      pm.environment.set(\"refresh_token_expires\", Date.now()+(jsonData.refresh_expires_in * 1000));\n    }\n    //console.log(err ? err : res.json());\n});"
						},
						"url": "https://postman-echo.com/post"
					},
					"response": []
				},
				{
					"name": "Install auth_refresh_script",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d682c68b-25da-42f8-a3c0-b524eaebdbac",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e746bda3-1345-4ecc-956c-ec47cab5c4eb",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"auth_refresh_script\", jsonData.data);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "authurl = pm.environment.get(\"authurl\");\nrealm = pm.environment.get(\"realm\");\nclientid = pm.environment.get(\"clientid\");\nrefresh_token = pm.environment.get(\"refresh_token\");\nclient_secret = pm.environment.get(\"client_secret\");\n\nconst echoPostRequest = {\n  url: authurl +'/auth/realms/' +realm + '/protocol/openid-connect/token',\n  method: 'POST',\n  header: 'Content-Type:application/x-www-form-urlencoded',\n  body: {\n    mode: 'raw',\n    raw: 'grant_type=refresh_token&client_id=' \n         +clientid \n         +'&refresh_token=' \n         +refresh_token \n         +'&client_secret='\n         +client_secret\n  }\n};\npm.sendRequest(echoPostRequest, function (err, res) {\n    var jsonData = res.json();\n    pm.environment.set(\"token\", jsonData.access_token);\n    pm.environment.set(\"refresh_token\", jsonData.refresh_token);\n    pm.environment.set(\"token_expires\", Date.now()+(jsonData.expires_in * 1000));\n    pm.environment.set(\"refresh_token_expires\", Date.now()+(jsonData.refresh_expires_in * 1000));\n\n    console.log(err ? err : res.json());\n});"
						},
						"url": "https://postman-echo.com/post"
					},
					"response": []
				},
				{
					"name": "authenticate",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8dc7d45a-d0cf-46c4-9619-8e9d9e88de38",
								"type": "text/javascript",
								"exec": [
									"authurl = pm.environment.get(\"authurl\");",
									"realm = pm.environment.get(\"realm\");",
									"clientid = pm.environment.get(\"clientid\");",
									"userid = pm.environment.get(\"userid\");",
									"password = pm.environment.get(\"password\");",
									"client_secret = pm.environment.get(\"client_secret\");",
									"",
									"var timeNow;",
									"",
									"pm.sendRequest('https://postman-echo.com/time/now', function (err, res) {",
									"    if (err) { console.log(err); }",
									"    else {",
									"        var currentTime = res.stream.toString();",
									"        console.log(currentTime);",
									"        pm.environment.set(\"currentTime\", currentTime);",
									"        timeNow = Date(currentTime)",
									"    }",
									"});",
									"",
									"const echoPostRequest = {",
									"  url: authurl +'/auth/realms/' +realm + '/protocol/openid-connect/token',",
									"  method: 'POST',",
									"  header: 'Content-Type:application/x-www-form-urlencoded',",
									"  body: {",
									"    mode: 'raw',",
									"    raw: 'grant_type=password&client_id=' ",
									"         +clientid ",
									"         +'&username=' ",
									"         +userid ",
									"         +'&password='",
									"         +password",
									"         +'&client_secret='",
									"         +client_secret",
									"  }",
									"};",
									"pm.sendRequest(echoPostRequest, function (err, res) {",
									"    var jsonData = res.json();",
									"    pm.environment.set(\"token\", jsonData.access_token);",
									"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"    console.log(err ? err : res.json());",
									"});",
									"",
									"console.log('time to run '+ (Date.now()-Date.parse(environment.currentTime)))"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d165a3e6-e32a-498e-b653-a4d959e5dda1",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"auth_script\", jsonData.data);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "authurl = pm.environment.get(\"authurl\");\nrealm = pm.environment.get(\"realm\");\nclientid = pm.environment.get(\"clientid\");\nuserid = pm.environment.get(\"userid\");\npassword = pm.environment.get(\"password\");\nclient_secret = pm.environment.get(\"client_secret\");\n\nconst echoPostRequest = {\n  url: authurl +'/auth/realms/' +realm + '/protocol/openid-connect/token',\n  method: 'POST',\n  header: 'Content-Type:application/x-www-form-urlencoded',\n  body: {\n    mode: 'raw',\n    raw: 'grant_type=password&client_id=' \n         +clientid \n         +'&username=' \n         +userid \n         +'&password='\n         +password\n         +'&client_secret='\n         +client_secret\n  }\n};\npm.sendRequest(echoPostRequest, function (err, res) {\n    var jsonData = res.json();\n    pm.environment.set(\"token\", jsonData.access_token);\n    pm.environment.set(\"refresh_token\", jsonData.refresh_token);\n    console.log(err ? err : res.json());\n});"
						},
						"url": "https://postman-echo.com/post"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "48417368-defd-4fd6-9714-ff94f80560af",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ec642727-8afe-408f-b5e0-7b21da1caf2d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "authenticate",
			"item": [
				{
					"name": "authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6720c75-f388-4f9a-a157-c4b4b560a99f",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token\", jsonData.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
									"",
									"pm.environment.set(\"token_expires\", Date.now()+(jsonData.expires_in * 1000));",
									"pm.environment.set(\"refresh_token_expires\", Date.now()+(jsonData.refresh_expires_in * 1000));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=password&client_id={{clientid}}&username={{userid}}&password={{password}}&client_secret={{client_secret}}"
						},
						"url": "{{auth_url}}/auth/realms/{{realm}}/protocol/openid-connect/token"
					},
					"response": []
				},
				{
					"name": "authentication-refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ef30827-b3d6-4518-8dc5-afdc26a7681e",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"token\", jsonData.access_token);",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=refresh_token&client_id={{clientid}}&refresh_token={{refresh_token}}&client_secret={{client_secret}}"
						},
						"url": "{{authurl}}/auth/realms/{{realm}}/protocol/openid-connect/token"
					},
					"response": []
				}
			]
		},
		{
			"name": "ops Copy",
			"item": [
				{
					"name": "healthz",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b3cd3b3-dec2-4b39-81c9-e406b63793ac",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"api is healthy\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('api is healthy');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/api/v1/nr-ops/healthz"
					},
					"response": []
				},
				{
					"name": "readyz",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ceec5748-a38a-4b7d-afab-ae773e30484e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"api is healthy\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.eql('api is ready');",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{url}}/api/v1/nr-ops/readyz"
					},
					"response": []
				},
				{
					"name": "echo",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4049b20-142f-4d1b-9291-6cf25d0242aa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"token includes key:preferred_username\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('preferred_username');",
									"});",
									"",
									"pm.test(\"token includes key:roles\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.realm_access).to.have.property('roles');",
									"});",
									"",
									"pm.test(\"token typ:Bearer\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.typ).to.eql(\"Bearer\");",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0e083fef-81cc-467a-a931-a2ef47d74735",
								"type": "text/javascript",
								"exec": [
									"eval(environment.auth_script);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": "{{url}}/api/v1/requests/echo"
					},
					"response": []
				},
				{
					"name": "meta info",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4049b20-142f-4d1b-9291-6cf25d0242aa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"token includes key:preferred_username\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('preferred_username');",
									"});",
									"",
									"pm.test(\"token includes key:roles\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.realm_access).to.have.property('roles');",
									"});",
									"",
									"pm.test(\"token typ:Bearer\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.typ).to.eql(\"Bearer\");",
									"});"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0e083fef-81cc-467a-a931-a2ef47d74735",
								"type": "text/javascript",
								"exec": [
									"eval(environment.auth_script);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"disabled": true
							}
						],
						"url": "{{url}}/api/v1/meta/info"
					},
					"response": []
				}
			]
		},
		{
			"name": "post - annual report - CP0002098",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9178a795-5b99-4f0d-87c4-012aeeaef580",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"eval(globals.postmanBDD);",
							"",
							"it('should be an success response', () => {",
							"    response.ok.should.be.true;            // 2XX",
							"    response.error.should.be.false;          // 4XX or 5XX",
							"    response.clientError.should.be.false;    // 4XX",
							"    response.serverError.should.be.false;   // 5XX",
							"    response.should.have.status(201);",
							"    response.statusType.should.equal(2);",
							"});",
							"",
							"it('should return JSON', () => {",
							"    response.should.be.json;",
							"    response.should.have.header('Content-Type', 'application/json');",
							"    response.type.should.equal('application/json');",
							"});",
							"",
							"it('should contain the un-parsed JSON text', () => {",
							"    response.text.should.be.a('string').with.length.above(10);",
							"});",
							"",
							"it('should contain the parsed JSON keys', () => {",
							"    response.body.should.be.an('object').with.keys(['filing']);",
							"});",
							"",
							"",
							"pm.test('should return the correct business', () => {",
							"  let jsonData = pm.response.json();",
							"  pm.expect(jsonData.filing.business.identifier).to.eql('CP1234567');",
							"});",
							"",
							"// it('should match against a JSON Schema', () => {",
							"//     // For more information about JSON Schema, see https://spacetelescope.github.io/understanding-json-schema/basics.html",
							"//     response.body.should.have.schema({",
							"//         type: 'object',",
							"//         required: ['annualReport', 'business', 'header']",
							"//     });",
							"// });",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"filing\": {\n        \"header\": {\n            \"name\": \"annual_report\",\n            \"date\": \"2019-04-08\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP0002098\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP0002098\"\n        },\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/api/v1/businesses/:id/filings",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"businesses",
						":id",
						"filings"
					],
					"variable": [
						{
							"key": "id",
							"value": "CP0002098"
						}
					]
				}
			},
			"response": [
				{
					"name": "post - annual report - CP0002098",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filing\": {\n        \"header\": {\n            \"name\": \"annual_report\",\n            \"date\": \"2019-04-08\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP0002098\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP0002098\"\n        },\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/businesses/:id/filings",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"businesses",
								":id",
								"filings"
							],
							"variable": [
								{
									"key": "id",
									"value": "CP0002098"
								}
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "HEAD, GET, OPTIONS, DELETE, POST, PUT"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "21600"
						},
						{
							"key": "API",
							"value": "legal_api/0.1.0a0.dev"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.15.4 Python/3.7.3"
						},
						{
							"key": "Date",
							"value": "Sun, 09 Jun 2019 16:15:24 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"filing\": {\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP0002098\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP0002098\"\n        },\n        \"header\": {\n            \"date\": \"2019-06-09\",\n            \"filingId\": 10,\n            \"name\": \"annual_report\"\n        }\n    }\n}"
				},
				{
					"name": "post - PAID annual report - CP1234567",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filing\": {\n        \"header\": {\n            \"name\": \"annual_report\",\n            \"date\": \"2019-04-08\",\n            \"paymentToken\": \"token\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP1234567\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP1234567\"\n        },\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/businesses/:id/filings",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"businesses",
								":id",
								"filings"
							],
							"variable": [
								{
									"key": "id",
									"value": "CP1234567"
								}
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "HEAD, GET, OPTIONS, DELETE, POST, PUT"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "21600"
						},
						{
							"key": "API",
							"value": "legal_api/0.1.0a0.dev"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.15.4 Python/3.7.3"
						},
						{
							"key": "Date",
							"value": "Sun, 09 Jun 2019 16:16:43 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"filing\": {\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP1234567\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP1234567\"\n        },\n        \"header\": {\n            \"date\": \"2019-06-09\",\n            \"filingId\": 11,\n            \"name\": \"annual_report\",\n            \"paymentToken\": \"token\"\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "post - annual report - Save Draft",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9178a795-5b99-4f0d-87c4-012aeeaef580",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"eval(globals.postmanBDD);",
							"",
							"it('should be an success response', () => {",
							"    response.ok.should.be.true;            // 2XX",
							"    response.error.should.be.false;          // 4XX or 5XX",
							"    response.clientError.should.be.false;    // 4XX",
							"    response.serverError.should.be.false;   // 5XX",
							"    response.should.have.status(201);",
							"    response.statusType.should.equal(2);",
							"});",
							"",
							"it('should return JSON', () => {",
							"    response.should.be.json;",
							"    response.should.have.header('Content-Type', 'application/json');",
							"    response.type.should.equal('application/json');",
							"});",
							"",
							"it('should contain the un-parsed JSON text', () => {",
							"    response.text.should.be.a('string').with.length.above(10);",
							"});",
							"",
							"it('should contain the parsed JSON keys', () => {",
							"    response.body.should.be.an('object').with.keys(['filing']);",
							"});",
							"",
							"",
							"pm.test('should return the correct business', () => {",
							"  let jsonData = pm.response.json();",
							"  pm.expect(jsonData.filing.business.identifier).to.eql('CP1234567');",
							"});",
							"",
							"// it('should match against a JSON Schema', () => {",
							"//     // For more information about JSON Schema, see https://spacetelescope.github.io/understanding-json-schema/basics.html",
							"//     response.body.should.have.schema({",
							"//         type: 'object',",
							"//         required: ['annualReport', 'business', 'header']",
							"//     });",
							"// });",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"filing\": {\n        \"header\": {\n            \"name\": \"annual_report\",\n            \"date\": \"2019-04-08\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP1234567\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP1234567\"\n        },\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/api/v1/businesses/:id/filings?draft=true",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"businesses",
						":id",
						"filings"
					],
					"query": [
						{
							"key": "draft",
							"value": "true"
						},
						{
							"key": "only_validate",
							"value": "true",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "CP0002098"
						}
					]
				}
			},
			"response": [
				{
					"name": "post - annual report - CP1234567 - Save Draft",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filing\": {\n        \"header\": {\n            \"name\": \"annual_report\",\n            \"date\": \"2019-04-08\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP1234567\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP1234567\"\n        },\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/businesses/:id/filings?draft=true",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"businesses",
								":id",
								"filings"
							],
							"query": [
								{
									"key": "draft",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "CP0002098"
								}
							]
						}
					},
					"status": "CREATED",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "HEAD, GET, OPTIONS, DELETE, POST, PUT"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "21600"
						},
						{
							"key": "API",
							"value": "legal_api/0.1.0a0.dev"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.15.4 Python/3.7.3"
						},
						{
							"key": "Date",
							"value": "Sun, 09 Jun 2019 16:15:24 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"filing\": {\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP0002098\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP0002098\"\n        },\n        \"header\": {\n            \"date\": \"2019-06-09\",\n            \"filingId\": 10,\n            \"name\": \"annual_report\"\n        }\n    },\n    \"errors\":[\n    \t]\n}"
				}
			]
		},
		{
			"name": "put - annual report CP0002098",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"filing\": {\n        \"header\": {\n            \"name\": \"annual_report\",\n            \"date\": \"2019-04-08\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP7654321\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP7654321\"\n        },\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/api/v1/businesses/:id/filings/:filing_id",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"businesses",
						":id",
						"filings",
						":filing_id"
					],
					"variable": [
						{
							"key": "id",
							"value": "CP0002098"
						},
						{
							"key": "filing_id",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"name": "update - annual report CP0002098:1",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filing\": {\n        \"header\": {\n            \"name\": \"annual_report\",\n            \"date\": \"2019-04-08\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP1234567\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP1234567\"\n        },\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/businesses/:id/filings/:filing_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"businesses",
								":id",
								"filings",
								":filing_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "CP0002098"
								},
								{
									"key": "filing_id",
									"value": "1"
								}
							]
						}
					},
					"status": "ACCEPTED",
					"code": 202,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "POST, OPTIONS, GET, PUT, HEAD, DELETE"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "21600"
						},
						{
							"key": "API",
							"value": "legal_api/0.1.0a0.dev"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.15.4 Python/3.7.3"
						},
						{
							"key": "Date",
							"value": "Thu, 06 Jun 2019 17:37:46 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"filing\": {\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP0002098\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP0002098\"\n        },\n        \"header\": {\n            \"date\": \"2019-04-08\",\n            \"name\": \"annual_report\"\n        }\n    }\n}"
				},
				{
					"name": "update - annual report PAID CP1234567:1",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filing\": {\n        \"header\": {\n            \"name\": \"annual_report\",\n            \"date\": \"2019-04-08\",\n            \"paymentToken\": \"token\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP1234567\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP1234567\"\n        },\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        }\n    }\n}"
						},
						"url": {
							"raw": "{{url}}/api/v1/businesses/:id/filings/:filing_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"businesses",
								":id",
								"filings",
								":filing_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "CP1234567"
								},
								{
									"key": "filing_id",
									"value": "1"
								}
							]
						}
					},
					"status": "ACCEPTED",
					"code": 202,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "POST, OPTIONS, GET, PUT, HEAD, DELETE"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "21600"
						},
						{
							"key": "API",
							"value": "legal_api/0.1.0a0.dev"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.15.4 Python/3.7.3"
						},
						{
							"key": "Date",
							"value": "Thu, 06 Jun 2019 17:38:36 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"filing\": {\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP1234567\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP1234567\"\n        },\n        \"header\": {\n            \"date\": \"2019-04-08\",\n            \"name\": \"annual_report\",\n            \"paymentToken\": \"token\"\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "get-business CP0002098",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/businesses/:id",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"businesses",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "CP0002098"
						}
					]
				}
			},
			"response": [
				{
					"name": "get-business - CP0002098",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/businesses/:id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"businesses",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "CP0002098"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "gunicorn/19.9.0"
						},
						{
							"key": "Date",
							"value": "Wed, 26 Jun 2019 20:26:08 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, HEAD, OPTIONS"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "21600"
						},
						{
							"key": "API",
							"value": "legal_api/0.1.0a0.dev-962c1dd270b61e1588b4558cc697de777db05834"
						},
						{
							"key": "Set-Cookie",
							"value": "059aaa4f140e1e89f5d3df00f5a4ed0f=6c9e2e842164927fdcb37072a6889220; path=/; HttpOnly; Secure"
						},
						{
							"key": "Cache-control",
							"value": "private"
						}
					],
					"cookie": [],
					"body": "{\n    \"business\": {\n        \"foundingDate\": \"2019-06-10T00:00:00+00:00\",\n        \"identifier\": \"CP0002098\",\n        \"lastModified\": \"2019-06-10T22:35:19.652478+00:00\",\n        \"legalName\": \"legal name CP0002098\",\n        \"mailingAddress\": {\n            \"addressCity\": \"Test City\",\n            \"addressCountry\": \"TA\",\n            \"addressRegion\": \"BC\",\n            \"addressType\": \"mailing\",\n            \"deliveryInstructions\": null,\n            \"postalCode\": \"T3S3T3\",\n            \"streetAddress\": \"CP0002098-Test Street\",\n            \"streetAddressAdditional\": null\n        },\n        \"taxId\": \"123456789\"\n    }\n}"
				}
			]
		},
		{
			"name": "get-business-filing - annual report CP0002098:2017",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/businesses/:id/filings/:filing_id",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"businesses",
						":id",
						"filings",
						":filing_id"
					],
					"variable": [
						{
							"key": "id",
							"value": "CP0002098"
						},
						{
							"key": "filing_id",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"name": "get-business-filing - CP0002098:1",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/businesses/:id/filings/:filing_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"businesses",
								":id",
								"filings",
								":filing_id"
							],
							"variable": [
								{
									"key": "id",
									"value": "CP0002098"
								},
								{
									"key": "filing_id",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "HEAD, GET, OPTIONS, DELETE, POST, PUT"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "21600"
						},
						{
							"key": "API",
							"value": "legal_api/0.1.0a0.dev"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.15.4 Python/3.7.3"
						},
						{
							"key": "Date",
							"value": "Sun, 09 Jun 2019 16:14:41 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"filing\": {\n        \"annualReport\": {\n            \"annualGeneralMeetingDate\": \"2019-04-08\",\n            \"certifiedBy\": \"full name\",\n            \"email\": \"no_one@never.get\",\n            \"status\": \"PENDING\"\n        },\n        \"business\": {\n            \"cacheId\": 1,\n            \"foundingDate\": \"2007-04-08\",\n            \"identifier\": \"CP0002098\",\n            \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n            \"legalName\": \"legal name - CP0002098\"\n        },\n        \"header\": {\n            \"date\": \"2019-06-06\",\n            \"filingId\": 1,\n            \"name\": \"annual_report\",\n            \"paymentToken\": \"token\",\n            \"status\": \"PENDING\"\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "get-business-filings - CP0002098",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/v1/businesses/:id/filings",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"businesses",
						":id",
						"filings"
					],
					"variable": [
						{
							"key": "id",
							"value": "CP0002098"
						}
					]
				}
			},
			"response": [
				{
					"name": "get-business-filings - CP0002098",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/v1/businesses/:id/filings",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"v1",
								"businesses",
								":id",
								"filings"
							],
							"variable": [
								{
									"key": "id",
									"value": "CP0002098"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "HEAD, GET, OPTIONS, DELETE, POST, PUT"
						},
						{
							"key": "Access-Control-Max-Age",
							"value": "21600"
						},
						{
							"key": "API",
							"value": "legal_api/0.1.0a0.dev"
						},
						{
							"key": "Server",
							"value": "Werkzeug/0.15.4 Python/3.7.3"
						},
						{
							"key": "Date",
							"value": "Sun, 09 Jun 2019 16:13:42 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"filings\": [\n        {\n            \"filing\": {\n                \"annualReport\": {\n                    \"annualGeneralMeetingDate\": \"2019-04-08\",\n                    \"certifiedBy\": \"full name\",\n                    \"email\": \"no_one@never.get\"\n                },\n                \"business\": {\n                    \"cacheId\": 1,\n                    \"foundingDate\": \"2007-04-08\",\n                    \"identifier\": \"CP0002098\",\n                    \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n                    \"legalName\": \"legal name - CP0002098\"\n                },\n                \"header\": {\n                    \"date\": \"2019-06-06\",\n                    \"filingId\": 8,\n                    \"name\": \"annual_report\"\n                }\n            }\n        },\n        {\n            \"filing\": {\n                \"annualReport\": {\n                    \"annualGeneralMeetingDate\": \"2019-04-08\",\n                    \"certifiedBy\": \"full name\",\n                    \"email\": \"no_one@never.get\"\n                },\n                \"business\": {\n                    \"cacheId\": 1,\n                    \"foundingDate\": \"2007-04-08\",\n                    \"identifier\": \"CP0002098\",\n                    \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n                    \"legalName\": \"legal name - CP0002098\"\n                },\n                \"header\": {\n                    \"date\": \"2019-06-06\",\n                    \"filingId\": 9,\n                    \"name\": \"annual_report\",\n                    \"paymentToken\": \"token\"\n                }\n            }\n        },\n        {\n            \"filing\": {\n                \"annualReport\": {\n                    \"annualGeneralMeetingDate\": \"2019-04-08\",\n                    \"certifiedBy\": \"full name\",\n                    \"email\": \"no_one@never.get\"\n                },\n                \"business\": {\n                    \"cacheId\": 1,\n                    \"foundingDate\": \"2007-04-08\",\n                    \"identifier\": \"CP0002098\",\n                    \"lastLedgerTimestamp\": \"2019-04-15T20:05:49.068272+00:00\",\n                    \"legalName\": \"legal name - CP0002098\"\n                },\n                \"header\": {\n                    \"date\": \"2019-06-06\",\n                    \"filingId\": 1,\n                    \"name\": \"annual_report\",\n                    \"paymentToken\": \"token\"\n                }\n            }\n        }\n    ]\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "06247768-8ca0-4919-8f43-5833346fb137",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "cef47724-5de9-4678-82fa-e2482a1e95f7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}