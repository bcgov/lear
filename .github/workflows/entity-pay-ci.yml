name: Entity Pay CI

on:
  pull_request:
    types: [assigned, synchronize]
    paths:
      - "queue_services/entity-pay/**"
      - "queue_services/common/**"

jobs:
  entity-pay-ci:
    env:
      DATABASE_TEST_USERNAME: postgres
      DATABASE_TEST_PASSWORD: postgres
      DATABASE_TEST_NAME: postgres
      DATABASE_TEST_HOST: localhost
      DATABASE_HOST: localhost
      DATABASE_PASSWORD: postgres
      NATS_SERVERS: "nats://nats:4222"
      NATS_CLIENT_NAME: entity.email.tester
      NATS_CLUSTER_ID: test-cluster
      NATS_FILER_SUBJECT: entity.email
      NATS_QUEUE: entity-email-worker
      JWT_OIDC_JWKS_CACHE_TIMEOUT: 300

    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
        working-directory: ./queue_services/entity-pay

    strategy:
      matrix:
        python-version: [3.8]

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          make setup
      - name: Lint with pylint
        run: |
          make lint
      - name: Lint with flake8
        run: |
          make flake8
      #- name: Test with pytest
      #  run: |
      #    make test
      #- name: Upload coverage to Codecov
      #  uses: codecov/codecov-action@v1
      #  with:
      #    file: ./queue_services/entity-pay/coverage.xml
      #    flags: entitypay
      #    name: codecov-entity-pay
      #    fail_ci_if_error: true
      - name: build to check strictness
        run: |
          make build-nc
