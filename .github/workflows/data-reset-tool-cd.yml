name: Data Reset Tool CD

on:
  push:
    branches:
      - master
    paths:
      - "data-reset-tool/**"
  workflow_dispatch:
    inputs:
      environement:
        description: "Environment (dev/test)"
        required: true
        default: "dev"

jobs:
  data-reset-tool-cd:
    runs-on: ubuntu-20.04

    defaults:
      run:
        shell: bash
        working-directory: ./data-reset-tool

    env:
      APP_NAME: "data-reset-tool"

    if: github.repository == 'bcgov/lear'
    steps:
      - uses: actions/checkout@v2
      - name: Set env by input
        run: |
          echo "TAG_NAME=${{ github.event.inputs.environement }}" >> $GITHUB_ENV

      - name: Set env by master branch
        if: env.TAG_NAME == '' && github.ref == 'refs/heads/master'
        run: |
          echo "TAG_NAME=dev" >> $GITHUB_ENV

      - name: Login Openshift
        shell: bash
        run: |
          oc login --server=${{secrets.OPENSHIFT4_LOGIN_REGISTRY}} --token=${{secrets.OPENSHIFT4_SA_TOKEN}}

      - name: CD Flow (build/update env/push/tag)
        shell: bash
        env:
          OP_PARAMETERS: ${{ secrets.OP_PARAMETERS }}
          OPS_REPOSITORY: ${{ secrets.OPS_REPOSITORY }}
          OPENSHIFT_DOCKER_REGISTRY: ${{ secrets.OPENSHIFT4_DOCKER_REGISTRY }}
          OPENSHIFT_SA_NAME: ${{ secrets.OPENSHIFT4_SA_NAME }}
          OPENSHIFT_SA_TOKEN: ${{ secrets.OPENSHIFT4_SA_TOKEN }}
          OPENSHIFT_REPOSITORY: ${{ secrets.OPENSHIFT4_REPOSITORY }}
          TAG_NAME: ${{ env.TAG_NAME }}
        run: |
          make cd

      - name: Watch new rollout (trigger by image change in Openshift)
        shell: bash
        run: |
          oc rollout status dc/${{ env.APP_NAME }}-${{ env.TAG_NAME }} -n ${{ secrets.OPENSHIFT4_REPOSITORY_DEPLOYMENT }}-${{ env.TAG_NAME }} -w

      - name: Rocket.Chat Notification
        uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@master
        if: failure()
        with:
          type: ${{ job.status }}
          job_name: "*Data Reset Tool Built and Deployed to ${{env.TAG_NAME}}*"
          channel: "#registries-bot"
          url: ${{ secrets.ROCKETCHAT_WEBHOOK }}
          commit: true
          token: ${{ secrets.GITHUB_TOKEN }}
